/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiCallback;
import com.infopluscommerce.ApiClient;
import com.infopluscommerce.ApiException;
import com.infopluscommerce.ApiResponse;
import com.infopluscommerce.Configuration;
import com.infopluscommerce.Pair;
import com.infopluscommerce.ProgressRequestBody;
import com.infopluscommerce.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.infopluscommerce.model.InvoiceWorksheetLineDetail;
import com.infopluscommerce.model.RecordFile;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class InvoiceWorksheetLineDetailApi {
    private ApiClient apiClient;

    public InvoiceWorksheetLineDetailApi() {
        this(Configuration.getDefaultApiClient());
    }

    public InvoiceWorksheetLineDetailApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for addInvoiceWorksheetLineDetailAudit
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to add an audit to (required)
     * @param invoiceWorksheetLineDetailAudit The audit to add (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call addInvoiceWorksheetLineDetailAuditCall(Integer invoiceWorksheetLineDetailId, String invoiceWorksheetLineDetailAudit, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/beta/invoiceWorksheetLineDetail/{invoiceWorksheetLineDetailId}/audit/{invoiceWorksheetLineDetailAudit}"
            .replaceAll("\\{" + "invoiceWorksheetLineDetailId" + "\\}", apiClient.escapeString(invoiceWorksheetLineDetailId.toString()))
            .replaceAll("\\{" + "invoiceWorksheetLineDetailAudit" + "\\}", apiClient.escapeString(invoiceWorksheetLineDetailAudit.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call addInvoiceWorksheetLineDetailAuditValidateBeforeCall(Integer invoiceWorksheetLineDetailId, String invoiceWorksheetLineDetailAudit, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'invoiceWorksheetLineDetailId' is set
        if (invoiceWorksheetLineDetailId == null) {
            throw new ApiException("Missing the required parameter 'invoiceWorksheetLineDetailId' when calling addInvoiceWorksheetLineDetailAudit(Async)");
        }
        
        // verify the required parameter 'invoiceWorksheetLineDetailAudit' is set
        if (invoiceWorksheetLineDetailAudit == null) {
            throw new ApiException("Missing the required parameter 'invoiceWorksheetLineDetailAudit' when calling addInvoiceWorksheetLineDetailAudit(Async)");
        }
        

        com.squareup.okhttp.Call call = addInvoiceWorksheetLineDetailAuditCall(invoiceWorksheetLineDetailId, invoiceWorksheetLineDetailAudit, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Add new audit for an invoiceWorksheetLineDetail
     * Adds an audit to an existing invoiceWorksheetLineDetail.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to add an audit to (required)
     * @param invoiceWorksheetLineDetailAudit The audit to add (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void addInvoiceWorksheetLineDetailAudit(Integer invoiceWorksheetLineDetailId, String invoiceWorksheetLineDetailAudit) throws ApiException {
        addInvoiceWorksheetLineDetailAuditWithHttpInfo(invoiceWorksheetLineDetailId, invoiceWorksheetLineDetailAudit);
    }

    /**
     * Add new audit for an invoiceWorksheetLineDetail
     * Adds an audit to an existing invoiceWorksheetLineDetail.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to add an audit to (required)
     * @param invoiceWorksheetLineDetailAudit The audit to add (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> addInvoiceWorksheetLineDetailAuditWithHttpInfo(Integer invoiceWorksheetLineDetailId, String invoiceWorksheetLineDetailAudit) throws ApiException {
        com.squareup.okhttp.Call call = addInvoiceWorksheetLineDetailAuditValidateBeforeCall(invoiceWorksheetLineDetailId, invoiceWorksheetLineDetailAudit, null, null);
        return apiClient.execute(call);
    }

    /**
     * Add new audit for an invoiceWorksheetLineDetail (asynchronously)
     * Adds an audit to an existing invoiceWorksheetLineDetail.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to add an audit to (required)
     * @param invoiceWorksheetLineDetailAudit The audit to add (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call addInvoiceWorksheetLineDetailAuditAsync(Integer invoiceWorksheetLineDetailId, String invoiceWorksheetLineDetailAudit, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = addInvoiceWorksheetLineDetailAuditValidateBeforeCall(invoiceWorksheetLineDetailId, invoiceWorksheetLineDetailAudit, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for addInvoiceWorksheetLineDetailFile
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to add a file to (required)
     * @param fileName Name of file (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call addInvoiceWorksheetLineDetailFileCall(Integer invoiceWorksheetLineDetailId, String fileName, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/beta/invoiceWorksheetLineDetail/{invoiceWorksheetLineDetailId}/file/{fileName}"
            .replaceAll("\\{" + "invoiceWorksheetLineDetailId" + "\\}", apiClient.escapeString(invoiceWorksheetLineDetailId.toString()))
            .replaceAll("\\{" + "fileName" + "\\}", apiClient.escapeString(fileName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call addInvoiceWorksheetLineDetailFileValidateBeforeCall(Integer invoiceWorksheetLineDetailId, String fileName, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'invoiceWorksheetLineDetailId' is set
        if (invoiceWorksheetLineDetailId == null) {
            throw new ApiException("Missing the required parameter 'invoiceWorksheetLineDetailId' when calling addInvoiceWorksheetLineDetailFile(Async)");
        }
        
        // verify the required parameter 'fileName' is set
        if (fileName == null) {
            throw new ApiException("Missing the required parameter 'fileName' when calling addInvoiceWorksheetLineDetailFile(Async)");
        }
        

        com.squareup.okhttp.Call call = addInvoiceWorksheetLineDetailFileCall(invoiceWorksheetLineDetailId, fileName, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Attach a file to an invoiceWorksheetLineDetail
     * Adds a file to an existing invoiceWorksheetLineDetail.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to add a file to (required)
     * @param fileName Name of file (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void addInvoiceWorksheetLineDetailFile(Integer invoiceWorksheetLineDetailId, String fileName) throws ApiException {
        addInvoiceWorksheetLineDetailFileWithHttpInfo(invoiceWorksheetLineDetailId, fileName);
    }

    /**
     * Attach a file to an invoiceWorksheetLineDetail
     * Adds a file to an existing invoiceWorksheetLineDetail.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to add a file to (required)
     * @param fileName Name of file (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> addInvoiceWorksheetLineDetailFileWithHttpInfo(Integer invoiceWorksheetLineDetailId, String fileName) throws ApiException {
        com.squareup.okhttp.Call call = addInvoiceWorksheetLineDetailFileValidateBeforeCall(invoiceWorksheetLineDetailId, fileName, null, null);
        return apiClient.execute(call);
    }

    /**
     * Attach a file to an invoiceWorksheetLineDetail (asynchronously)
     * Adds a file to an existing invoiceWorksheetLineDetail.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to add a file to (required)
     * @param fileName Name of file (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call addInvoiceWorksheetLineDetailFileAsync(Integer invoiceWorksheetLineDetailId, String fileName, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = addInvoiceWorksheetLineDetailFileValidateBeforeCall(invoiceWorksheetLineDetailId, fileName, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for addInvoiceWorksheetLineDetailFileByURL
     * @param body The url and optionly fileName to be used. (required)
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to add an file to (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call addInvoiceWorksheetLineDetailFileByURLCall(RecordFile body, Integer invoiceWorksheetLineDetailId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/beta/invoiceWorksheetLineDetail/{invoiceWorksheetLineDetailId}/file"
            .replaceAll("\\{" + "invoiceWorksheetLineDetailId" + "\\}", apiClient.escapeString(invoiceWorksheetLineDetailId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call addInvoiceWorksheetLineDetailFileByURLValidateBeforeCall(RecordFile body, Integer invoiceWorksheetLineDetailId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling addInvoiceWorksheetLineDetailFileByURL(Async)");
        }
        
        // verify the required parameter 'invoiceWorksheetLineDetailId' is set
        if (invoiceWorksheetLineDetailId == null) {
            throw new ApiException("Missing the required parameter 'invoiceWorksheetLineDetailId' when calling addInvoiceWorksheetLineDetailFileByURL(Async)");
        }
        

        com.squareup.okhttp.Call call = addInvoiceWorksheetLineDetailFileByURLCall(body, invoiceWorksheetLineDetailId, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Attach a file to an invoiceWorksheetLineDetail by URL.
     * Adds a file to an existing invoiceWorksheetLineDetail by URL.
     * @param body The url and optionly fileName to be used. (required)
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to add an file to (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void addInvoiceWorksheetLineDetailFileByURL(RecordFile body, Integer invoiceWorksheetLineDetailId) throws ApiException {
        addInvoiceWorksheetLineDetailFileByURLWithHttpInfo(body, invoiceWorksheetLineDetailId);
    }

    /**
     * Attach a file to an invoiceWorksheetLineDetail by URL.
     * Adds a file to an existing invoiceWorksheetLineDetail by URL.
     * @param body The url and optionly fileName to be used. (required)
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to add an file to (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> addInvoiceWorksheetLineDetailFileByURLWithHttpInfo(RecordFile body, Integer invoiceWorksheetLineDetailId) throws ApiException {
        com.squareup.okhttp.Call call = addInvoiceWorksheetLineDetailFileByURLValidateBeforeCall(body, invoiceWorksheetLineDetailId, null, null);
        return apiClient.execute(call);
    }

    /**
     * Attach a file to an invoiceWorksheetLineDetail by URL. (asynchronously)
     * Adds a file to an existing invoiceWorksheetLineDetail by URL.
     * @param body The url and optionly fileName to be used. (required)
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to add an file to (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call addInvoiceWorksheetLineDetailFileByURLAsync(RecordFile body, Integer invoiceWorksheetLineDetailId, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = addInvoiceWorksheetLineDetailFileByURLValidateBeforeCall(body, invoiceWorksheetLineDetailId, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for addInvoiceWorksheetLineDetailTag
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to add a tag to (required)
     * @param invoiceWorksheetLineDetailTag The tag to add (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call addInvoiceWorksheetLineDetailTagCall(Integer invoiceWorksheetLineDetailId, String invoiceWorksheetLineDetailTag, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/beta/invoiceWorksheetLineDetail/{invoiceWorksheetLineDetailId}/tag/{invoiceWorksheetLineDetailTag}"
            .replaceAll("\\{" + "invoiceWorksheetLineDetailId" + "\\}", apiClient.escapeString(invoiceWorksheetLineDetailId.toString()))
            .replaceAll("\\{" + "invoiceWorksheetLineDetailTag" + "\\}", apiClient.escapeString(invoiceWorksheetLineDetailTag.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call addInvoiceWorksheetLineDetailTagValidateBeforeCall(Integer invoiceWorksheetLineDetailId, String invoiceWorksheetLineDetailTag, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'invoiceWorksheetLineDetailId' is set
        if (invoiceWorksheetLineDetailId == null) {
            throw new ApiException("Missing the required parameter 'invoiceWorksheetLineDetailId' when calling addInvoiceWorksheetLineDetailTag(Async)");
        }
        
        // verify the required parameter 'invoiceWorksheetLineDetailTag' is set
        if (invoiceWorksheetLineDetailTag == null) {
            throw new ApiException("Missing the required parameter 'invoiceWorksheetLineDetailTag' when calling addInvoiceWorksheetLineDetailTag(Async)");
        }
        

        com.squareup.okhttp.Call call = addInvoiceWorksheetLineDetailTagCall(invoiceWorksheetLineDetailId, invoiceWorksheetLineDetailTag, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Add new tags for an invoiceWorksheetLineDetail.
     * Adds a tag to an existing invoiceWorksheetLineDetail.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to add a tag to (required)
     * @param invoiceWorksheetLineDetailTag The tag to add (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void addInvoiceWorksheetLineDetailTag(Integer invoiceWorksheetLineDetailId, String invoiceWorksheetLineDetailTag) throws ApiException {
        addInvoiceWorksheetLineDetailTagWithHttpInfo(invoiceWorksheetLineDetailId, invoiceWorksheetLineDetailTag);
    }

    /**
     * Add new tags for an invoiceWorksheetLineDetail.
     * Adds a tag to an existing invoiceWorksheetLineDetail.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to add a tag to (required)
     * @param invoiceWorksheetLineDetailTag The tag to add (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> addInvoiceWorksheetLineDetailTagWithHttpInfo(Integer invoiceWorksheetLineDetailId, String invoiceWorksheetLineDetailTag) throws ApiException {
        com.squareup.okhttp.Call call = addInvoiceWorksheetLineDetailTagValidateBeforeCall(invoiceWorksheetLineDetailId, invoiceWorksheetLineDetailTag, null, null);
        return apiClient.execute(call);
    }

    /**
     * Add new tags for an invoiceWorksheetLineDetail. (asynchronously)
     * Adds a tag to an existing invoiceWorksheetLineDetail.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to add a tag to (required)
     * @param invoiceWorksheetLineDetailTag The tag to add (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call addInvoiceWorksheetLineDetailTagAsync(Integer invoiceWorksheetLineDetailId, String invoiceWorksheetLineDetailTag, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = addInvoiceWorksheetLineDetailTagValidateBeforeCall(invoiceWorksheetLineDetailId, invoiceWorksheetLineDetailTag, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for deleteInvoiceWorksheetLineDetailFile
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to remove file from (required)
     * @param fileId Id of the file to delete (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call deleteInvoiceWorksheetLineDetailFileCall(Integer invoiceWorksheetLineDetailId, Integer fileId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/beta/invoiceWorksheetLineDetail/{invoiceWorksheetLineDetailId}/file/{fileId}"
            .replaceAll("\\{" + "invoiceWorksheetLineDetailId" + "\\}", apiClient.escapeString(invoiceWorksheetLineDetailId.toString()))
            .replaceAll("\\{" + "fileId" + "\\}", apiClient.escapeString(fileId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call deleteInvoiceWorksheetLineDetailFileValidateBeforeCall(Integer invoiceWorksheetLineDetailId, Integer fileId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'invoiceWorksheetLineDetailId' is set
        if (invoiceWorksheetLineDetailId == null) {
            throw new ApiException("Missing the required parameter 'invoiceWorksheetLineDetailId' when calling deleteInvoiceWorksheetLineDetailFile(Async)");
        }
        
        // verify the required parameter 'fileId' is set
        if (fileId == null) {
            throw new ApiException("Missing the required parameter 'fileId' when calling deleteInvoiceWorksheetLineDetailFile(Async)");
        }
        

        com.squareup.okhttp.Call call = deleteInvoiceWorksheetLineDetailFileCall(invoiceWorksheetLineDetailId, fileId, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Delete a file for an invoiceWorksheetLineDetail.
     * Deletes an existing invoiceWorksheetLineDetail file using the specified data.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to remove file from (required)
     * @param fileId Id of the file to delete (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void deleteInvoiceWorksheetLineDetailFile(Integer invoiceWorksheetLineDetailId, Integer fileId) throws ApiException {
        deleteInvoiceWorksheetLineDetailFileWithHttpInfo(invoiceWorksheetLineDetailId, fileId);
    }

    /**
     * Delete a file for an invoiceWorksheetLineDetail.
     * Deletes an existing invoiceWorksheetLineDetail file using the specified data.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to remove file from (required)
     * @param fileId Id of the file to delete (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> deleteInvoiceWorksheetLineDetailFileWithHttpInfo(Integer invoiceWorksheetLineDetailId, Integer fileId) throws ApiException {
        com.squareup.okhttp.Call call = deleteInvoiceWorksheetLineDetailFileValidateBeforeCall(invoiceWorksheetLineDetailId, fileId, null, null);
        return apiClient.execute(call);
    }

    /**
     * Delete a file for an invoiceWorksheetLineDetail. (asynchronously)
     * Deletes an existing invoiceWorksheetLineDetail file using the specified data.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to remove file from (required)
     * @param fileId Id of the file to delete (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call deleteInvoiceWorksheetLineDetailFileAsync(Integer invoiceWorksheetLineDetailId, Integer fileId, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = deleteInvoiceWorksheetLineDetailFileValidateBeforeCall(invoiceWorksheetLineDetailId, fileId, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for deleteInvoiceWorksheetLineDetailTag
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to remove tag from (required)
     * @param invoiceWorksheetLineDetailTag The tag to delete (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call deleteInvoiceWorksheetLineDetailTagCall(Integer invoiceWorksheetLineDetailId, String invoiceWorksheetLineDetailTag, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/beta/invoiceWorksheetLineDetail/{invoiceWorksheetLineDetailId}/tag/{invoiceWorksheetLineDetailTag}"
            .replaceAll("\\{" + "invoiceWorksheetLineDetailId" + "\\}", apiClient.escapeString(invoiceWorksheetLineDetailId.toString()))
            .replaceAll("\\{" + "invoiceWorksheetLineDetailTag" + "\\}", apiClient.escapeString(invoiceWorksheetLineDetailTag.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call deleteInvoiceWorksheetLineDetailTagValidateBeforeCall(Integer invoiceWorksheetLineDetailId, String invoiceWorksheetLineDetailTag, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'invoiceWorksheetLineDetailId' is set
        if (invoiceWorksheetLineDetailId == null) {
            throw new ApiException("Missing the required parameter 'invoiceWorksheetLineDetailId' when calling deleteInvoiceWorksheetLineDetailTag(Async)");
        }
        
        // verify the required parameter 'invoiceWorksheetLineDetailTag' is set
        if (invoiceWorksheetLineDetailTag == null) {
            throw new ApiException("Missing the required parameter 'invoiceWorksheetLineDetailTag' when calling deleteInvoiceWorksheetLineDetailTag(Async)");
        }
        

        com.squareup.okhttp.Call call = deleteInvoiceWorksheetLineDetailTagCall(invoiceWorksheetLineDetailId, invoiceWorksheetLineDetailTag, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Delete a tag for an invoiceWorksheetLineDetail.
     * Deletes an existing invoiceWorksheetLineDetail tag using the specified data.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to remove tag from (required)
     * @param invoiceWorksheetLineDetailTag The tag to delete (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void deleteInvoiceWorksheetLineDetailTag(Integer invoiceWorksheetLineDetailId, String invoiceWorksheetLineDetailTag) throws ApiException {
        deleteInvoiceWorksheetLineDetailTagWithHttpInfo(invoiceWorksheetLineDetailId, invoiceWorksheetLineDetailTag);
    }

    /**
     * Delete a tag for an invoiceWorksheetLineDetail.
     * Deletes an existing invoiceWorksheetLineDetail tag using the specified data.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to remove tag from (required)
     * @param invoiceWorksheetLineDetailTag The tag to delete (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> deleteInvoiceWorksheetLineDetailTagWithHttpInfo(Integer invoiceWorksheetLineDetailId, String invoiceWorksheetLineDetailTag) throws ApiException {
        com.squareup.okhttp.Call call = deleteInvoiceWorksheetLineDetailTagValidateBeforeCall(invoiceWorksheetLineDetailId, invoiceWorksheetLineDetailTag, null, null);
        return apiClient.execute(call);
    }

    /**
     * Delete a tag for an invoiceWorksheetLineDetail. (asynchronously)
     * Deletes an existing invoiceWorksheetLineDetail tag using the specified data.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to remove tag from (required)
     * @param invoiceWorksheetLineDetailTag The tag to delete (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call deleteInvoiceWorksheetLineDetailTagAsync(Integer invoiceWorksheetLineDetailId, String invoiceWorksheetLineDetailTag, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = deleteInvoiceWorksheetLineDetailTagValidateBeforeCall(invoiceWorksheetLineDetailId, invoiceWorksheetLineDetailTag, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for getDuplicateInvoiceWorksheetLineDetailById
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to be duplicated. (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getDuplicateInvoiceWorksheetLineDetailByIdCall(Integer invoiceWorksheetLineDetailId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/beta/invoiceWorksheetLineDetail/duplicate/{invoiceWorksheetLineDetailId}"
            .replaceAll("\\{" + "invoiceWorksheetLineDetailId" + "\\}", apiClient.escapeString(invoiceWorksheetLineDetailId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getDuplicateInvoiceWorksheetLineDetailByIdValidateBeforeCall(Integer invoiceWorksheetLineDetailId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'invoiceWorksheetLineDetailId' is set
        if (invoiceWorksheetLineDetailId == null) {
            throw new ApiException("Missing the required parameter 'invoiceWorksheetLineDetailId' when calling getDuplicateInvoiceWorksheetLineDetailById(Async)");
        }
        

        com.squareup.okhttp.Call call = getDuplicateInvoiceWorksheetLineDetailByIdCall(invoiceWorksheetLineDetailId, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Get a duplicated an invoiceWorksheetLineDetail by id
     * Returns a duplicated invoiceWorksheetLineDetail identified by the specified id.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to be duplicated. (required)
     * @return InvoiceWorksheetLineDetail
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InvoiceWorksheetLineDetail getDuplicateInvoiceWorksheetLineDetailById(Integer invoiceWorksheetLineDetailId) throws ApiException {
        ApiResponse<InvoiceWorksheetLineDetail> resp = getDuplicateInvoiceWorksheetLineDetailByIdWithHttpInfo(invoiceWorksheetLineDetailId);
        return resp.getData();
    }

    /**
     * Get a duplicated an invoiceWorksheetLineDetail by id
     * Returns a duplicated invoiceWorksheetLineDetail identified by the specified id.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to be duplicated. (required)
     * @return ApiResponse&lt;InvoiceWorksheetLineDetail&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InvoiceWorksheetLineDetail> getDuplicateInvoiceWorksheetLineDetailByIdWithHttpInfo(Integer invoiceWorksheetLineDetailId) throws ApiException {
        com.squareup.okhttp.Call call = getDuplicateInvoiceWorksheetLineDetailByIdValidateBeforeCall(invoiceWorksheetLineDetailId, null, null);
        Type localVarReturnType = new TypeToken<InvoiceWorksheetLineDetail>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get a duplicated an invoiceWorksheetLineDetail by id (asynchronously)
     * Returns a duplicated invoiceWorksheetLineDetail identified by the specified id.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to be duplicated. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getDuplicateInvoiceWorksheetLineDetailByIdAsync(Integer invoiceWorksheetLineDetailId, final ApiCallback<InvoiceWorksheetLineDetail> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getDuplicateInvoiceWorksheetLineDetailByIdValidateBeforeCall(invoiceWorksheetLineDetailId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InvoiceWorksheetLineDetail>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getInvoiceWorksheetLineDetailByFilter
     * @param filter Query string, used to filter results. (optional)
     * @param page Result page number.  Defaults to 1. (optional)
     * @param limit Maximum results per page.  Defaults to 20.  Max allowed value is 250. (optional)
     * @param sort Sort results by specified field. (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getInvoiceWorksheetLineDetailByFilterCall(String filter, Integer page, Integer limit, String sort, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/beta/invoiceWorksheetLineDetail/search";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("filter", filter));
        if (page != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("page", page));
        if (limit != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("limit", limit));
        if (sort != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("sort", sort));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getInvoiceWorksheetLineDetailByFilterValidateBeforeCall(String filter, Integer page, Integer limit, String sort, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        

        com.squareup.okhttp.Call call = getInvoiceWorksheetLineDetailByFilterCall(filter, page, limit, sort, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Search invoiceWorksheetLineDetails by filter
     * Returns the list of invoiceWorksheetLineDetails that match the given filter.
     * @param filter Query string, used to filter results. (optional)
     * @param page Result page number.  Defaults to 1. (optional)
     * @param limit Maximum results per page.  Defaults to 20.  Max allowed value is 250. (optional)
     * @param sort Sort results by specified field. (optional)
     * @return List&lt;InvoiceWorksheetLineDetail&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<InvoiceWorksheetLineDetail> getInvoiceWorksheetLineDetailByFilter(String filter, Integer page, Integer limit, String sort) throws ApiException {
        ApiResponse<List<InvoiceWorksheetLineDetail>> resp = getInvoiceWorksheetLineDetailByFilterWithHttpInfo(filter, page, limit, sort);
        return resp.getData();
    }

    /**
     * Search invoiceWorksheetLineDetails by filter
     * Returns the list of invoiceWorksheetLineDetails that match the given filter.
     * @param filter Query string, used to filter results. (optional)
     * @param page Result page number.  Defaults to 1. (optional)
     * @param limit Maximum results per page.  Defaults to 20.  Max allowed value is 250. (optional)
     * @param sort Sort results by specified field. (optional)
     * @return ApiResponse&lt;List&lt;InvoiceWorksheetLineDetail&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<InvoiceWorksheetLineDetail>> getInvoiceWorksheetLineDetailByFilterWithHttpInfo(String filter, Integer page, Integer limit, String sort) throws ApiException {
        com.squareup.okhttp.Call call = getInvoiceWorksheetLineDetailByFilterValidateBeforeCall(filter, page, limit, sort, null, null);
        Type localVarReturnType = new TypeToken<List<InvoiceWorksheetLineDetail>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Search invoiceWorksheetLineDetails by filter (asynchronously)
     * Returns the list of invoiceWorksheetLineDetails that match the given filter.
     * @param filter Query string, used to filter results. (optional)
     * @param page Result page number.  Defaults to 1. (optional)
     * @param limit Maximum results per page.  Defaults to 20.  Max allowed value is 250. (optional)
     * @param sort Sort results by specified field. (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getInvoiceWorksheetLineDetailByFilterAsync(String filter, Integer page, Integer limit, String sort, final ApiCallback<List<InvoiceWorksheetLineDetail>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getInvoiceWorksheetLineDetailByFilterValidateBeforeCall(filter, page, limit, sort, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<InvoiceWorksheetLineDetail>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getInvoiceWorksheetLineDetailById
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to be returned. (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getInvoiceWorksheetLineDetailByIdCall(Integer invoiceWorksheetLineDetailId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/beta/invoiceWorksheetLineDetail/{invoiceWorksheetLineDetailId}"
            .replaceAll("\\{" + "invoiceWorksheetLineDetailId" + "\\}", apiClient.escapeString(invoiceWorksheetLineDetailId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getInvoiceWorksheetLineDetailByIdValidateBeforeCall(Integer invoiceWorksheetLineDetailId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'invoiceWorksheetLineDetailId' is set
        if (invoiceWorksheetLineDetailId == null) {
            throw new ApiException("Missing the required parameter 'invoiceWorksheetLineDetailId' when calling getInvoiceWorksheetLineDetailById(Async)");
        }
        

        com.squareup.okhttp.Call call = getInvoiceWorksheetLineDetailByIdCall(invoiceWorksheetLineDetailId, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Get an invoiceWorksheetLineDetail by id
     * Returns the invoiceWorksheetLineDetail identified by the specified id.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to be returned. (required)
     * @return InvoiceWorksheetLineDetail
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InvoiceWorksheetLineDetail getInvoiceWorksheetLineDetailById(Integer invoiceWorksheetLineDetailId) throws ApiException {
        ApiResponse<InvoiceWorksheetLineDetail> resp = getInvoiceWorksheetLineDetailByIdWithHttpInfo(invoiceWorksheetLineDetailId);
        return resp.getData();
    }

    /**
     * Get an invoiceWorksheetLineDetail by id
     * Returns the invoiceWorksheetLineDetail identified by the specified id.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to be returned. (required)
     * @return ApiResponse&lt;InvoiceWorksheetLineDetail&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InvoiceWorksheetLineDetail> getInvoiceWorksheetLineDetailByIdWithHttpInfo(Integer invoiceWorksheetLineDetailId) throws ApiException {
        com.squareup.okhttp.Call call = getInvoiceWorksheetLineDetailByIdValidateBeforeCall(invoiceWorksheetLineDetailId, null, null);
        Type localVarReturnType = new TypeToken<InvoiceWorksheetLineDetail>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get an invoiceWorksheetLineDetail by id (asynchronously)
     * Returns the invoiceWorksheetLineDetail identified by the specified id.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to be returned. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getInvoiceWorksheetLineDetailByIdAsync(Integer invoiceWorksheetLineDetailId, final ApiCallback<InvoiceWorksheetLineDetail> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getInvoiceWorksheetLineDetailByIdValidateBeforeCall(invoiceWorksheetLineDetailId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InvoiceWorksheetLineDetail>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getInvoiceWorksheetLineDetailFiles
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to get files for (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getInvoiceWorksheetLineDetailFilesCall(Integer invoiceWorksheetLineDetailId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/beta/invoiceWorksheetLineDetail/{invoiceWorksheetLineDetailId}/file"
            .replaceAll("\\{" + "invoiceWorksheetLineDetailId" + "\\}", apiClient.escapeString(invoiceWorksheetLineDetailId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getInvoiceWorksheetLineDetailFilesValidateBeforeCall(Integer invoiceWorksheetLineDetailId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'invoiceWorksheetLineDetailId' is set
        if (invoiceWorksheetLineDetailId == null) {
            throw new ApiException("Missing the required parameter 'invoiceWorksheetLineDetailId' when calling getInvoiceWorksheetLineDetailFiles(Async)");
        }
        

        com.squareup.okhttp.Call call = getInvoiceWorksheetLineDetailFilesCall(invoiceWorksheetLineDetailId, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Get the files for an invoiceWorksheetLineDetail.
     * Get all existing invoiceWorksheetLineDetail files.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to get files for (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void getInvoiceWorksheetLineDetailFiles(Integer invoiceWorksheetLineDetailId) throws ApiException {
        getInvoiceWorksheetLineDetailFilesWithHttpInfo(invoiceWorksheetLineDetailId);
    }

    /**
     * Get the files for an invoiceWorksheetLineDetail.
     * Get all existing invoiceWorksheetLineDetail files.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to get files for (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> getInvoiceWorksheetLineDetailFilesWithHttpInfo(Integer invoiceWorksheetLineDetailId) throws ApiException {
        com.squareup.okhttp.Call call = getInvoiceWorksheetLineDetailFilesValidateBeforeCall(invoiceWorksheetLineDetailId, null, null);
        return apiClient.execute(call);
    }

    /**
     * Get the files for an invoiceWorksheetLineDetail. (asynchronously)
     * Get all existing invoiceWorksheetLineDetail files.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to get files for (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getInvoiceWorksheetLineDetailFilesAsync(Integer invoiceWorksheetLineDetailId, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getInvoiceWorksheetLineDetailFilesValidateBeforeCall(invoiceWorksheetLineDetailId, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for getInvoiceWorksheetLineDetailTags
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to get tags for (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getInvoiceWorksheetLineDetailTagsCall(Integer invoiceWorksheetLineDetailId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/beta/invoiceWorksheetLineDetail/{invoiceWorksheetLineDetailId}/tag"
            .replaceAll("\\{" + "invoiceWorksheetLineDetailId" + "\\}", apiClient.escapeString(invoiceWorksheetLineDetailId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getInvoiceWorksheetLineDetailTagsValidateBeforeCall(Integer invoiceWorksheetLineDetailId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'invoiceWorksheetLineDetailId' is set
        if (invoiceWorksheetLineDetailId == null) {
            throw new ApiException("Missing the required parameter 'invoiceWorksheetLineDetailId' when calling getInvoiceWorksheetLineDetailTags(Async)");
        }
        

        com.squareup.okhttp.Call call = getInvoiceWorksheetLineDetailTagsCall(invoiceWorksheetLineDetailId, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Get the tags for an invoiceWorksheetLineDetail.
     * Get all existing invoiceWorksheetLineDetail tags.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to get tags for (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void getInvoiceWorksheetLineDetailTags(Integer invoiceWorksheetLineDetailId) throws ApiException {
        getInvoiceWorksheetLineDetailTagsWithHttpInfo(invoiceWorksheetLineDetailId);
    }

    /**
     * Get the tags for an invoiceWorksheetLineDetail.
     * Get all existing invoiceWorksheetLineDetail tags.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to get tags for (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> getInvoiceWorksheetLineDetailTagsWithHttpInfo(Integer invoiceWorksheetLineDetailId) throws ApiException {
        com.squareup.okhttp.Call call = getInvoiceWorksheetLineDetailTagsValidateBeforeCall(invoiceWorksheetLineDetailId, null, null);
        return apiClient.execute(call);
    }

    /**
     * Get the tags for an invoiceWorksheetLineDetail. (asynchronously)
     * Get all existing invoiceWorksheetLineDetail tags.
     * @param invoiceWorksheetLineDetailId Id of the invoiceWorksheetLineDetail to get tags for (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getInvoiceWorksheetLineDetailTagsAsync(Integer invoiceWorksheetLineDetailId, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getInvoiceWorksheetLineDetailTagsValidateBeforeCall(invoiceWorksheetLineDetailId, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for updateInvoiceWorksheetLineDetailCustomFields
     * @param body InvoiceWorksheetLineDetail to be updated. (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call updateInvoiceWorksheetLineDetailCustomFieldsCall(InvoiceWorksheetLineDetail body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/beta/invoiceWorksheetLineDetail/customFields";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call updateInvoiceWorksheetLineDetailCustomFieldsValidateBeforeCall(InvoiceWorksheetLineDetail body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling updateInvoiceWorksheetLineDetailCustomFields(Async)");
        }
        

        com.squareup.okhttp.Call call = updateInvoiceWorksheetLineDetailCustomFieldsCall(body, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Update an invoiceWorksheetLineDetail custom fields
     * Updates an existing invoiceWorksheetLineDetail custom fields using the specified data.
     * @param body InvoiceWorksheetLineDetail to be updated. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void updateInvoiceWorksheetLineDetailCustomFields(InvoiceWorksheetLineDetail body) throws ApiException {
        updateInvoiceWorksheetLineDetailCustomFieldsWithHttpInfo(body);
    }

    /**
     * Update an invoiceWorksheetLineDetail custom fields
     * Updates an existing invoiceWorksheetLineDetail custom fields using the specified data.
     * @param body InvoiceWorksheetLineDetail to be updated. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> updateInvoiceWorksheetLineDetailCustomFieldsWithHttpInfo(InvoiceWorksheetLineDetail body) throws ApiException {
        com.squareup.okhttp.Call call = updateInvoiceWorksheetLineDetailCustomFieldsValidateBeforeCall(body, null, null);
        return apiClient.execute(call);
    }

    /**
     * Update an invoiceWorksheetLineDetail custom fields (asynchronously)
     * Updates an existing invoiceWorksheetLineDetail custom fields using the specified data.
     * @param body InvoiceWorksheetLineDetail to be updated. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call updateInvoiceWorksheetLineDetailCustomFieldsAsync(InvoiceWorksheetLineDetail body, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = updateInvoiceWorksheetLineDetailCustomFieldsValidateBeforeCall(body, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
}

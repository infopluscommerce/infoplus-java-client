/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;

/**
 * PerpetualInventoryLog
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-08-20T00:35:00.193-05:00")
public class PerpetualInventoryLog {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("itemReceiptLocationId")
  private Integer itemReceiptLocationId = null;

  @SerializedName("itemReceiptId")
  private Integer itemReceiptId = null;

  @SerializedName("asnId")
  private Integer asnId = null;

  @SerializedName("lobId")
  private Integer lobId = null;

  @SerializedName("legacyPoNo")
  private String legacyPoNo = null;

  @SerializedName("warehouseId")
  private Integer warehouseId = null;

  @SerializedName("currentQuantity")
  private Integer currentQuantity = null;

  @SerializedName("outstandingPickQuantity")
  private Integer outstandingPickQuantity = null;

  @SerializedName("address")
  private String address = null;

  @SerializedName("warehouseLocationId")
  private Integer warehouseLocationId = null;

  @SerializedName("locationStatus")
  private String locationStatus = null;

  @SerializedName("orderDate")
  private OffsetDateTime orderDate = null;

  @SerializedName("receiptStatus")
  private String receiptStatus = null;

  @SerializedName("factCost")
  private BigDecimal factCost = null;

  @SerializedName("mlCost")
  private BigDecimal mlCost = null;

  @SerializedName("sku")
  private String sku = null;

  @SerializedName("orderQuantity")
  private Integer orderQuantity = null;

  @SerializedName("requestedDeliveryDate")
  private OffsetDateTime requestedDeliveryDate = null;

  @SerializedName("unitCode")
  private String unitCode = null;

  @SerializedName("wrapCode")
  private String wrapCode = null;

  @SerializedName("unitsPerWrap")
  private Integer unitsPerWrap = null;

  @SerializedName("cost")
  private BigDecimal cost = null;

  @SerializedName("sell")
  private BigDecimal sell = null;

  @SerializedName("pricingPer")
  private String pricingPer = null;

  @SerializedName("maxFreight")
  private BigDecimal maxFreight = null;

  @SerializedName("chargeFreight")
  private String chargeFreight = null;

  @SerializedName("maxOther")
  private BigDecimal maxOther = null;

  @SerializedName("distDate")
  private OffsetDateTime distDate = null;

  @SerializedName("expirationDate")
  private OffsetDateTime expirationDate = null;

  @SerializedName("voidDate")
  private OffsetDateTime voidDate = null;

  @SerializedName("freezeAction")
  private String freezeAction = null;

  @SerializedName("revDate")
  private String revDate = null;

  @SerializedName("artBack")
  private String artBack = null;

  @SerializedName("origin")
  private String origin = null;

  @SerializedName("sample")
  private Integer sample = null;

  @SerializedName("sampleTo")
  private String sampleTo = null;

  @SerializedName("maxOvers")
  private Integer maxOvers = null;

  @SerializedName("maxUnders")
  private Integer maxUnders = null;

  @SerializedName("receivedSfp")
  private Integer receivedSfp = null;

  @SerializedName("budgetCode")
  private String budgetCode = null;

  @SerializedName("accountingCode")
  private String accountingCode = null;

  @SerializedName("taxExempt")
  private String taxExempt = null;

  @SerializedName("capitalize")
  private String capitalize = null;

  @SerializedName("accrual")
  private String accrual = null;

  @SerializedName("oddQuantity")
  private Integer oddQuantity = null;

  @SerializedName("freightCost")
  private BigDecimal freightCost = null;

  @SerializedName("receivedDate")
  private OffsetDateTime receivedDate = null;

  @SerializedName("receivedQuantity")
  private Integer receivedQuantity = null;

  @SerializedName("fromProd")
  private Integer fromProd = null;

  @SerializedName("sfpComplete")
  private String sfpComplete = null;

  @SerializedName("endQuantity")
  private Integer endQuantity = null;

  @SerializedName("endVal")
  private BigDecimal endVal = null;

  @SerializedName("endFact")
  private BigDecimal endFact = null;

  @SerializedName("interimQuantity")
  private Integer interimQuantity = null;

  @SerializedName("interimVal")
  private BigDecimal interimVal = null;

  @SerializedName("interimFact")
  private BigDecimal interimFact = null;

  @SerializedName("lastAct")
  private OffsetDateTime lastAct = null;

  @SerializedName("weightPerWrap")
  private BigDecimal weightPerWrap = null;

  @SerializedName("norcs")
  private String norcs = null;

  @SerializedName("vendorId")
  private Integer vendorId = null;

  @SerializedName("bsVendor")
  private Integer bsVendor = null;

  @SerializedName("mlVendor")
  private Integer mlVendor = null;

  @SerializedName("receiptNo")
  private Integer receiptNo = null;

  @SerializedName("paidFull")
  private String paidFull = null;

  @SerializedName("enteredBy")
  private String enteredBy = null;

  @SerializedName("receivedBy")
  private String receivedBy = null;

  @SerializedName("lineNo")
  private Integer lineNo = null;

  @SerializedName("prodLot")
  private String prodLot = null;

  @SerializedName("productIdTag")
  private String productIdTag = null;

  @SerializedName("unitsPerCase")
  private Integer unitsPerCase = null;

  @SerializedName("caseWeight")
  private BigDecimal caseWeight = null;

  @SerializedName("height")
  private BigDecimal height = null;

  @SerializedName("width")
  private BigDecimal width = null;

  @SerializedName("length")
  private BigDecimal length = null;

  @SerializedName("dockDate")
  private OffsetDateTime dockDate = null;

  @SerializedName("impressions")
  private Integer impressions = null;

  @SerializedName("asnLine")
  private Integer asnLine = null;

  @SerializedName("updatedAt")
  private OffsetDateTime updatedAt = null;

  @SerializedName("itemForwardLotMixingRule")
  private String itemForwardLotMixingRule = null;

  @SerializedName("itemStorageLotMixingRule")
  private String itemStorageLotMixingRule = null;

  @SerializedName("itemForwardItemMixingRule")
  private String itemForwardItemMixingRule = null;

  @SerializedName("itemStorageItemMixingRule")
  private String itemStorageItemMixingRule = null;

  @SerializedName("itemAllocationRule")
  private String itemAllocationRule = null;

  @SerializedName("itemBarcodeField")
  private String itemBarcodeField = null;

  @SerializedName("itemWarehouseDisplayField")
  private String itemWarehouseDisplayField = null;

  @SerializedName("itemProductIdTagSchemeId")
  private Integer itemProductIdTagSchemeId = null;

  @SerializedName("customFields")
  private Map<String, Object> customFields = null;

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }

   /**
   * Get itemReceiptLocationId
   * @return itemReceiptLocationId
  **/
  @ApiModelProperty(value = "")
  public Integer getItemReceiptLocationId() {
    return itemReceiptLocationId;
  }

   /**
   * Get itemReceiptId
   * @return itemReceiptId
  **/
  @ApiModelProperty(value = "")
  public Integer getItemReceiptId() {
    return itemReceiptId;
  }

   /**
   * Get asnId
   * @return asnId
  **/
  @ApiModelProperty(value = "")
  public Integer getAsnId() {
    return asnId;
  }

   /**
   * Get lobId
   * @return lobId
  **/
  @ApiModelProperty(value = "")
  public Integer getLobId() {
    return lobId;
  }

  public PerpetualInventoryLog legacyPoNo(String legacyPoNo) {
    this.legacyPoNo = legacyPoNo;
    return this;
  }

   /**
   * Get legacyPoNo
   * @return legacyPoNo
  **/
  @ApiModelProperty(value = "")
  public String getLegacyPoNo() {
    return legacyPoNo;
  }

  public void setLegacyPoNo(String legacyPoNo) {
    this.legacyPoNo = legacyPoNo;
  }

   /**
   * Get warehouseId
   * @return warehouseId
  **/
  @ApiModelProperty(value = "")
  public Integer getWarehouseId() {
    return warehouseId;
  }

   /**
   * Get currentQuantity
   * @return currentQuantity
  **/
  @ApiModelProperty(value = "")
  public Integer getCurrentQuantity() {
    return currentQuantity;
  }

   /**
   * Get outstandingPickQuantity
   * @return outstandingPickQuantity
  **/
  @ApiModelProperty(value = "")
  public Integer getOutstandingPickQuantity() {
    return outstandingPickQuantity;
  }

  public PerpetualInventoryLog address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @ApiModelProperty(value = "")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

   /**
   * Get warehouseLocationId
   * @return warehouseLocationId
  **/
  @ApiModelProperty(value = "")
  public Integer getWarehouseLocationId() {
    return warehouseLocationId;
  }

   /**
   * Get locationStatus
   * @return locationStatus
  **/
  @ApiModelProperty(value = "")
  public String getLocationStatus() {
    return locationStatus;
  }

  public PerpetualInventoryLog orderDate(OffsetDateTime orderDate) {
    this.orderDate = orderDate;
    return this;
  }

   /**
   * Get orderDate
   * @return orderDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getOrderDate() {
    return orderDate;
  }

  public void setOrderDate(OffsetDateTime orderDate) {
    this.orderDate = orderDate;
  }

  public PerpetualInventoryLog receiptStatus(String receiptStatus) {
    this.receiptStatus = receiptStatus;
    return this;
  }

   /**
   * Get receiptStatus
   * @return receiptStatus
  **/
  @ApiModelProperty(value = "")
  public String getReceiptStatus() {
    return receiptStatus;
  }

  public void setReceiptStatus(String receiptStatus) {
    this.receiptStatus = receiptStatus;
  }

  public PerpetualInventoryLog factCost(BigDecimal factCost) {
    this.factCost = factCost;
    return this;
  }

   /**
   * Get factCost
   * @return factCost
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getFactCost() {
    return factCost;
  }

  public void setFactCost(BigDecimal factCost) {
    this.factCost = factCost;
  }

  public PerpetualInventoryLog mlCost(BigDecimal mlCost) {
    this.mlCost = mlCost;
    return this;
  }

   /**
   * Get mlCost
   * @return mlCost
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getMlCost() {
    return mlCost;
  }

  public void setMlCost(BigDecimal mlCost) {
    this.mlCost = mlCost;
  }

   /**
   * Get sku
   * @return sku
  **/
  @ApiModelProperty(value = "")
  public String getSku() {
    return sku;
  }

  public PerpetualInventoryLog orderQuantity(Integer orderQuantity) {
    this.orderQuantity = orderQuantity;
    return this;
  }

   /**
   * Get orderQuantity
   * @return orderQuantity
  **/
  @ApiModelProperty(value = "")
  public Integer getOrderQuantity() {
    return orderQuantity;
  }

  public void setOrderQuantity(Integer orderQuantity) {
    this.orderQuantity = orderQuantity;
  }

  public PerpetualInventoryLog requestedDeliveryDate(OffsetDateTime requestedDeliveryDate) {
    this.requestedDeliveryDate = requestedDeliveryDate;
    return this;
  }

   /**
   * Get requestedDeliveryDate
   * @return requestedDeliveryDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getRequestedDeliveryDate() {
    return requestedDeliveryDate;
  }

  public void setRequestedDeliveryDate(OffsetDateTime requestedDeliveryDate) {
    this.requestedDeliveryDate = requestedDeliveryDate;
  }

  public PerpetualInventoryLog unitCode(String unitCode) {
    this.unitCode = unitCode;
    return this;
  }

   /**
   * Get unitCode
   * @return unitCode
  **/
  @ApiModelProperty(value = "")
  public String getUnitCode() {
    return unitCode;
  }

  public void setUnitCode(String unitCode) {
    this.unitCode = unitCode;
  }

  public PerpetualInventoryLog wrapCode(String wrapCode) {
    this.wrapCode = wrapCode;
    return this;
  }

   /**
   * Get wrapCode
   * @return wrapCode
  **/
  @ApiModelProperty(value = "")
  public String getWrapCode() {
    return wrapCode;
  }

  public void setWrapCode(String wrapCode) {
    this.wrapCode = wrapCode;
  }

  public PerpetualInventoryLog unitsPerWrap(Integer unitsPerWrap) {
    this.unitsPerWrap = unitsPerWrap;
    return this;
  }

   /**
   * Get unitsPerWrap
   * @return unitsPerWrap
  **/
  @ApiModelProperty(value = "")
  public Integer getUnitsPerWrap() {
    return unitsPerWrap;
  }

  public void setUnitsPerWrap(Integer unitsPerWrap) {
    this.unitsPerWrap = unitsPerWrap;
  }

  public PerpetualInventoryLog cost(BigDecimal cost) {
    this.cost = cost;
    return this;
  }

   /**
   * Get cost
   * @return cost
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getCost() {
    return cost;
  }

  public void setCost(BigDecimal cost) {
    this.cost = cost;
  }

  public PerpetualInventoryLog sell(BigDecimal sell) {
    this.sell = sell;
    return this;
  }

   /**
   * Get sell
   * @return sell
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getSell() {
    return sell;
  }

  public void setSell(BigDecimal sell) {
    this.sell = sell;
  }

  public PerpetualInventoryLog pricingPer(String pricingPer) {
    this.pricingPer = pricingPer;
    return this;
  }

   /**
   * Get pricingPer
   * @return pricingPer
  **/
  @ApiModelProperty(value = "")
  public String getPricingPer() {
    return pricingPer;
  }

  public void setPricingPer(String pricingPer) {
    this.pricingPer = pricingPer;
  }

  public PerpetualInventoryLog maxFreight(BigDecimal maxFreight) {
    this.maxFreight = maxFreight;
    return this;
  }

   /**
   * Get maxFreight
   * @return maxFreight
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getMaxFreight() {
    return maxFreight;
  }

  public void setMaxFreight(BigDecimal maxFreight) {
    this.maxFreight = maxFreight;
  }

  public PerpetualInventoryLog chargeFreight(String chargeFreight) {
    this.chargeFreight = chargeFreight;
    return this;
  }

   /**
   * Get chargeFreight
   * @return chargeFreight
  **/
  @ApiModelProperty(value = "")
  public String getChargeFreight() {
    return chargeFreight;
  }

  public void setChargeFreight(String chargeFreight) {
    this.chargeFreight = chargeFreight;
  }

  public PerpetualInventoryLog maxOther(BigDecimal maxOther) {
    this.maxOther = maxOther;
    return this;
  }

   /**
   * Get maxOther
   * @return maxOther
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getMaxOther() {
    return maxOther;
  }

  public void setMaxOther(BigDecimal maxOther) {
    this.maxOther = maxOther;
  }

  public PerpetualInventoryLog distDate(OffsetDateTime distDate) {
    this.distDate = distDate;
    return this;
  }

   /**
   * Get distDate
   * @return distDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getDistDate() {
    return distDate;
  }

  public void setDistDate(OffsetDateTime distDate) {
    this.distDate = distDate;
  }

  public PerpetualInventoryLog expirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Get expirationDate
   * @return expirationDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getExpirationDate() {
    return expirationDate;
  }

  public void setExpirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
  }

  public PerpetualInventoryLog voidDate(OffsetDateTime voidDate) {
    this.voidDate = voidDate;
    return this;
  }

   /**
   * Get voidDate
   * @return voidDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getVoidDate() {
    return voidDate;
  }

  public void setVoidDate(OffsetDateTime voidDate) {
    this.voidDate = voidDate;
  }

  public PerpetualInventoryLog freezeAction(String freezeAction) {
    this.freezeAction = freezeAction;
    return this;
  }

   /**
   * Get freezeAction
   * @return freezeAction
  **/
  @ApiModelProperty(value = "")
  public String getFreezeAction() {
    return freezeAction;
  }

  public void setFreezeAction(String freezeAction) {
    this.freezeAction = freezeAction;
  }

  public PerpetualInventoryLog revDate(String revDate) {
    this.revDate = revDate;
    return this;
  }

   /**
   * Get revDate
   * @return revDate
  **/
  @ApiModelProperty(value = "")
  public String getRevDate() {
    return revDate;
  }

  public void setRevDate(String revDate) {
    this.revDate = revDate;
  }

  public PerpetualInventoryLog artBack(String artBack) {
    this.artBack = artBack;
    return this;
  }

   /**
   * Get artBack
   * @return artBack
  **/
  @ApiModelProperty(value = "")
  public String getArtBack() {
    return artBack;
  }

  public void setArtBack(String artBack) {
    this.artBack = artBack;
  }

  public PerpetualInventoryLog origin(String origin) {
    this.origin = origin;
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @ApiModelProperty(value = "")
  public String getOrigin() {
    return origin;
  }

  public void setOrigin(String origin) {
    this.origin = origin;
  }

  public PerpetualInventoryLog sample(Integer sample) {
    this.sample = sample;
    return this;
  }

   /**
   * Get sample
   * @return sample
  **/
  @ApiModelProperty(value = "")
  public Integer getSample() {
    return sample;
  }

  public void setSample(Integer sample) {
    this.sample = sample;
  }

  public PerpetualInventoryLog sampleTo(String sampleTo) {
    this.sampleTo = sampleTo;
    return this;
  }

   /**
   * Get sampleTo
   * @return sampleTo
  **/
  @ApiModelProperty(value = "")
  public String getSampleTo() {
    return sampleTo;
  }

  public void setSampleTo(String sampleTo) {
    this.sampleTo = sampleTo;
  }

  public PerpetualInventoryLog maxOvers(Integer maxOvers) {
    this.maxOvers = maxOvers;
    return this;
  }

   /**
   * Get maxOvers
   * @return maxOvers
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxOvers() {
    return maxOvers;
  }

  public void setMaxOvers(Integer maxOvers) {
    this.maxOvers = maxOvers;
  }

  public PerpetualInventoryLog maxUnders(Integer maxUnders) {
    this.maxUnders = maxUnders;
    return this;
  }

   /**
   * Get maxUnders
   * @return maxUnders
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxUnders() {
    return maxUnders;
  }

  public void setMaxUnders(Integer maxUnders) {
    this.maxUnders = maxUnders;
  }

  public PerpetualInventoryLog receivedSfp(Integer receivedSfp) {
    this.receivedSfp = receivedSfp;
    return this;
  }

   /**
   * Get receivedSfp
   * @return receivedSfp
  **/
  @ApiModelProperty(value = "")
  public Integer getReceivedSfp() {
    return receivedSfp;
  }

  public void setReceivedSfp(Integer receivedSfp) {
    this.receivedSfp = receivedSfp;
  }

  public PerpetualInventoryLog budgetCode(String budgetCode) {
    this.budgetCode = budgetCode;
    return this;
  }

   /**
   * Get budgetCode
   * @return budgetCode
  **/
  @ApiModelProperty(value = "")
  public String getBudgetCode() {
    return budgetCode;
  }

  public void setBudgetCode(String budgetCode) {
    this.budgetCode = budgetCode;
  }

  public PerpetualInventoryLog accountingCode(String accountingCode) {
    this.accountingCode = accountingCode;
    return this;
  }

   /**
   * Get accountingCode
   * @return accountingCode
  **/
  @ApiModelProperty(value = "")
  public String getAccountingCode() {
    return accountingCode;
  }

  public void setAccountingCode(String accountingCode) {
    this.accountingCode = accountingCode;
  }

  public PerpetualInventoryLog taxExempt(String taxExempt) {
    this.taxExempt = taxExempt;
    return this;
  }

   /**
   * Get taxExempt
   * @return taxExempt
  **/
  @ApiModelProperty(value = "")
  public String getTaxExempt() {
    return taxExempt;
  }

  public void setTaxExempt(String taxExempt) {
    this.taxExempt = taxExempt;
  }

  public PerpetualInventoryLog capitalize(String capitalize) {
    this.capitalize = capitalize;
    return this;
  }

   /**
   * Get capitalize
   * @return capitalize
  **/
  @ApiModelProperty(value = "")
  public String getCapitalize() {
    return capitalize;
  }

  public void setCapitalize(String capitalize) {
    this.capitalize = capitalize;
  }

  public PerpetualInventoryLog accrual(String accrual) {
    this.accrual = accrual;
    return this;
  }

   /**
   * Get accrual
   * @return accrual
  **/
  @ApiModelProperty(value = "")
  public String getAccrual() {
    return accrual;
  }

  public void setAccrual(String accrual) {
    this.accrual = accrual;
  }

  public PerpetualInventoryLog oddQuantity(Integer oddQuantity) {
    this.oddQuantity = oddQuantity;
    return this;
  }

   /**
   * Get oddQuantity
   * @return oddQuantity
  **/
  @ApiModelProperty(value = "")
  public Integer getOddQuantity() {
    return oddQuantity;
  }

  public void setOddQuantity(Integer oddQuantity) {
    this.oddQuantity = oddQuantity;
  }

  public PerpetualInventoryLog freightCost(BigDecimal freightCost) {
    this.freightCost = freightCost;
    return this;
  }

   /**
   * Get freightCost
   * @return freightCost
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getFreightCost() {
    return freightCost;
  }

  public void setFreightCost(BigDecimal freightCost) {
    this.freightCost = freightCost;
  }

  public PerpetualInventoryLog receivedDate(OffsetDateTime receivedDate) {
    this.receivedDate = receivedDate;
    return this;
  }

   /**
   * Get receivedDate
   * @return receivedDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getReceivedDate() {
    return receivedDate;
  }

  public void setReceivedDate(OffsetDateTime receivedDate) {
    this.receivedDate = receivedDate;
  }

  public PerpetualInventoryLog receivedQuantity(Integer receivedQuantity) {
    this.receivedQuantity = receivedQuantity;
    return this;
  }

   /**
   * Get receivedQuantity
   * @return receivedQuantity
  **/
  @ApiModelProperty(value = "")
  public Integer getReceivedQuantity() {
    return receivedQuantity;
  }

  public void setReceivedQuantity(Integer receivedQuantity) {
    this.receivedQuantity = receivedQuantity;
  }

  public PerpetualInventoryLog fromProd(Integer fromProd) {
    this.fromProd = fromProd;
    return this;
  }

   /**
   * Get fromProd
   * @return fromProd
  **/
  @ApiModelProperty(value = "")
  public Integer getFromProd() {
    return fromProd;
  }

  public void setFromProd(Integer fromProd) {
    this.fromProd = fromProd;
  }

  public PerpetualInventoryLog sfpComplete(String sfpComplete) {
    this.sfpComplete = sfpComplete;
    return this;
  }

   /**
   * Get sfpComplete
   * @return sfpComplete
  **/
  @ApiModelProperty(value = "")
  public String getSfpComplete() {
    return sfpComplete;
  }

  public void setSfpComplete(String sfpComplete) {
    this.sfpComplete = sfpComplete;
  }

  public PerpetualInventoryLog endQuantity(Integer endQuantity) {
    this.endQuantity = endQuantity;
    return this;
  }

   /**
   * Get endQuantity
   * @return endQuantity
  **/
  @ApiModelProperty(value = "")
  public Integer getEndQuantity() {
    return endQuantity;
  }

  public void setEndQuantity(Integer endQuantity) {
    this.endQuantity = endQuantity;
  }

  public PerpetualInventoryLog endVal(BigDecimal endVal) {
    this.endVal = endVal;
    return this;
  }

   /**
   * Get endVal
   * @return endVal
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getEndVal() {
    return endVal;
  }

  public void setEndVal(BigDecimal endVal) {
    this.endVal = endVal;
  }

  public PerpetualInventoryLog endFact(BigDecimal endFact) {
    this.endFact = endFact;
    return this;
  }

   /**
   * Get endFact
   * @return endFact
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getEndFact() {
    return endFact;
  }

  public void setEndFact(BigDecimal endFact) {
    this.endFact = endFact;
  }

  public PerpetualInventoryLog interimQuantity(Integer interimQuantity) {
    this.interimQuantity = interimQuantity;
    return this;
  }

   /**
   * Get interimQuantity
   * @return interimQuantity
  **/
  @ApiModelProperty(value = "")
  public Integer getInterimQuantity() {
    return interimQuantity;
  }

  public void setInterimQuantity(Integer interimQuantity) {
    this.interimQuantity = interimQuantity;
  }

  public PerpetualInventoryLog interimVal(BigDecimal interimVal) {
    this.interimVal = interimVal;
    return this;
  }

   /**
   * Get interimVal
   * @return interimVal
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getInterimVal() {
    return interimVal;
  }

  public void setInterimVal(BigDecimal interimVal) {
    this.interimVal = interimVal;
  }

  public PerpetualInventoryLog interimFact(BigDecimal interimFact) {
    this.interimFact = interimFact;
    return this;
  }

   /**
   * Get interimFact
   * @return interimFact
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getInterimFact() {
    return interimFact;
  }

  public void setInterimFact(BigDecimal interimFact) {
    this.interimFact = interimFact;
  }

  public PerpetualInventoryLog lastAct(OffsetDateTime lastAct) {
    this.lastAct = lastAct;
    return this;
  }

   /**
   * Get lastAct
   * @return lastAct
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getLastAct() {
    return lastAct;
  }

  public void setLastAct(OffsetDateTime lastAct) {
    this.lastAct = lastAct;
  }

  public PerpetualInventoryLog weightPerWrap(BigDecimal weightPerWrap) {
    this.weightPerWrap = weightPerWrap;
    return this;
  }

   /**
   * Get weightPerWrap
   * @return weightPerWrap
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getWeightPerWrap() {
    return weightPerWrap;
  }

  public void setWeightPerWrap(BigDecimal weightPerWrap) {
    this.weightPerWrap = weightPerWrap;
  }

  public PerpetualInventoryLog norcs(String norcs) {
    this.norcs = norcs;
    return this;
  }

   /**
   * Get norcs
   * @return norcs
  **/
  @ApiModelProperty(value = "")
  public String getNorcs() {
    return norcs;
  }

  public void setNorcs(String norcs) {
    this.norcs = norcs;
  }

  public PerpetualInventoryLog vendorId(Integer vendorId) {
    this.vendorId = vendorId;
    return this;
  }

   /**
   * Get vendorId
   * @return vendorId
  **/
  @ApiModelProperty(value = "")
  public Integer getVendorId() {
    return vendorId;
  }

  public void setVendorId(Integer vendorId) {
    this.vendorId = vendorId;
  }

  public PerpetualInventoryLog bsVendor(Integer bsVendor) {
    this.bsVendor = bsVendor;
    return this;
  }

   /**
   * Get bsVendor
   * @return bsVendor
  **/
  @ApiModelProperty(value = "")
  public Integer getBsVendor() {
    return bsVendor;
  }

  public void setBsVendor(Integer bsVendor) {
    this.bsVendor = bsVendor;
  }

  public PerpetualInventoryLog mlVendor(Integer mlVendor) {
    this.mlVendor = mlVendor;
    return this;
  }

   /**
   * Get mlVendor
   * @return mlVendor
  **/
  @ApiModelProperty(value = "")
  public Integer getMlVendor() {
    return mlVendor;
  }

  public void setMlVendor(Integer mlVendor) {
    this.mlVendor = mlVendor;
  }

  public PerpetualInventoryLog receiptNo(Integer receiptNo) {
    this.receiptNo = receiptNo;
    return this;
  }

   /**
   * Get receiptNo
   * @return receiptNo
  **/
  @ApiModelProperty(value = "")
  public Integer getReceiptNo() {
    return receiptNo;
  }

  public void setReceiptNo(Integer receiptNo) {
    this.receiptNo = receiptNo;
  }

  public PerpetualInventoryLog paidFull(String paidFull) {
    this.paidFull = paidFull;
    return this;
  }

   /**
   * Get paidFull
   * @return paidFull
  **/
  @ApiModelProperty(value = "")
  public String getPaidFull() {
    return paidFull;
  }

  public void setPaidFull(String paidFull) {
    this.paidFull = paidFull;
  }

  public PerpetualInventoryLog enteredBy(String enteredBy) {
    this.enteredBy = enteredBy;
    return this;
  }

   /**
   * Get enteredBy
   * @return enteredBy
  **/
  @ApiModelProperty(value = "")
  public String getEnteredBy() {
    return enteredBy;
  }

  public void setEnteredBy(String enteredBy) {
    this.enteredBy = enteredBy;
  }

  public PerpetualInventoryLog receivedBy(String receivedBy) {
    this.receivedBy = receivedBy;
    return this;
  }

   /**
   * Get receivedBy
   * @return receivedBy
  **/
  @ApiModelProperty(value = "")
  public String getReceivedBy() {
    return receivedBy;
  }

  public void setReceivedBy(String receivedBy) {
    this.receivedBy = receivedBy;
  }

  public PerpetualInventoryLog lineNo(Integer lineNo) {
    this.lineNo = lineNo;
    return this;
  }

   /**
   * Get lineNo
   * @return lineNo
  **/
  @ApiModelProperty(value = "")
  public Integer getLineNo() {
    return lineNo;
  }

  public void setLineNo(Integer lineNo) {
    this.lineNo = lineNo;
  }

  public PerpetualInventoryLog prodLot(String prodLot) {
    this.prodLot = prodLot;
    return this;
  }

   /**
   * Get prodLot
   * @return prodLot
  **/
  @ApiModelProperty(value = "")
  public String getProdLot() {
    return prodLot;
  }

  public void setProdLot(String prodLot) {
    this.prodLot = prodLot;
  }

  public PerpetualInventoryLog productIdTag(String productIdTag) {
    this.productIdTag = productIdTag;
    return this;
  }

   /**
   * Get productIdTag
   * @return productIdTag
  **/
  @ApiModelProperty(value = "")
  public String getProductIdTag() {
    return productIdTag;
  }

  public void setProductIdTag(String productIdTag) {
    this.productIdTag = productIdTag;
  }

  public PerpetualInventoryLog unitsPerCase(Integer unitsPerCase) {
    this.unitsPerCase = unitsPerCase;
    return this;
  }

   /**
   * Get unitsPerCase
   * @return unitsPerCase
  **/
  @ApiModelProperty(value = "")
  public Integer getUnitsPerCase() {
    return unitsPerCase;
  }

  public void setUnitsPerCase(Integer unitsPerCase) {
    this.unitsPerCase = unitsPerCase;
  }

  public PerpetualInventoryLog caseWeight(BigDecimal caseWeight) {
    this.caseWeight = caseWeight;
    return this;
  }

   /**
   * Get caseWeight
   * @return caseWeight
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getCaseWeight() {
    return caseWeight;
  }

  public void setCaseWeight(BigDecimal caseWeight) {
    this.caseWeight = caseWeight;
  }

  public PerpetualInventoryLog height(BigDecimal height) {
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getHeight() {
    return height;
  }

  public void setHeight(BigDecimal height) {
    this.height = height;
  }

  public PerpetualInventoryLog width(BigDecimal width) {
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getWidth() {
    return width;
  }

  public void setWidth(BigDecimal width) {
    this.width = width;
  }

  public PerpetualInventoryLog length(BigDecimal length) {
    this.length = length;
    return this;
  }

   /**
   * Get length
   * @return length
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getLength() {
    return length;
  }

  public void setLength(BigDecimal length) {
    this.length = length;
  }

  public PerpetualInventoryLog dockDate(OffsetDateTime dockDate) {
    this.dockDate = dockDate;
    return this;
  }

   /**
   * Get dockDate
   * @return dockDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getDockDate() {
    return dockDate;
  }

  public void setDockDate(OffsetDateTime dockDate) {
    this.dockDate = dockDate;
  }

  public PerpetualInventoryLog impressions(Integer impressions) {
    this.impressions = impressions;
    return this;
  }

   /**
   * Get impressions
   * @return impressions
  **/
  @ApiModelProperty(value = "")
  public Integer getImpressions() {
    return impressions;
  }

  public void setImpressions(Integer impressions) {
    this.impressions = impressions;
  }

  public PerpetualInventoryLog asnLine(Integer asnLine) {
    this.asnLine = asnLine;
    return this;
  }

   /**
   * Get asnLine
   * @return asnLine
  **/
  @ApiModelProperty(value = "")
  public Integer getAsnLine() {
    return asnLine;
  }

  public void setAsnLine(Integer asnLine) {
    this.asnLine = asnLine;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

   /**
   * Get itemForwardLotMixingRule
   * @return itemForwardLotMixingRule
  **/
  @ApiModelProperty(required = true, value = "")
  public String getItemForwardLotMixingRule() {
    return itemForwardLotMixingRule;
  }

   /**
   * Get itemStorageLotMixingRule
   * @return itemStorageLotMixingRule
  **/
  @ApiModelProperty(required = true, value = "")
  public String getItemStorageLotMixingRule() {
    return itemStorageLotMixingRule;
  }

   /**
   * Get itemForwardItemMixingRule
   * @return itemForwardItemMixingRule
  **/
  @ApiModelProperty(required = true, value = "")
  public String getItemForwardItemMixingRule() {
    return itemForwardItemMixingRule;
  }

   /**
   * Get itemStorageItemMixingRule
   * @return itemStorageItemMixingRule
  **/
  @ApiModelProperty(required = true, value = "")
  public String getItemStorageItemMixingRule() {
    return itemStorageItemMixingRule;
  }

   /**
   * Get itemAllocationRule
   * @return itemAllocationRule
  **/
  @ApiModelProperty(required = true, value = "")
  public String getItemAllocationRule() {
    return itemAllocationRule;
  }

   /**
   * Get itemBarcodeField
   * @return itemBarcodeField
  **/
  @ApiModelProperty(value = "")
  public String getItemBarcodeField() {
    return itemBarcodeField;
  }

   /**
   * Get itemWarehouseDisplayField
   * @return itemWarehouseDisplayField
  **/
  @ApiModelProperty(value = "")
  public String getItemWarehouseDisplayField() {
    return itemWarehouseDisplayField;
  }

   /**
   * Get itemProductIdTagSchemeId
   * @return itemProductIdTagSchemeId
  **/
  @ApiModelProperty(value = "")
  public Integer getItemProductIdTagSchemeId() {
    return itemProductIdTagSchemeId;
  }

  public PerpetualInventoryLog customFields(Map<String, Object> customFields) {
    this.customFields = customFields;
    return this;
  }

  public PerpetualInventoryLog putCustomFieldsItem(String key, Object customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new HashMap<String, Object>();
    }
    this.customFields.put(key, customFieldsItem);
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getCustomFields() {
    return customFields;
  }

  public void setCustomFields(Map<String, Object> customFields) {
    this.customFields = customFields;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PerpetualInventoryLog perpetualInventoryLog = (PerpetualInventoryLog) o;
    return Objects.equals(this.id, perpetualInventoryLog.id) &&
        Objects.equals(this.itemReceiptLocationId, perpetualInventoryLog.itemReceiptLocationId) &&
        Objects.equals(this.itemReceiptId, perpetualInventoryLog.itemReceiptId) &&
        Objects.equals(this.asnId, perpetualInventoryLog.asnId) &&
        Objects.equals(this.lobId, perpetualInventoryLog.lobId) &&
        Objects.equals(this.legacyPoNo, perpetualInventoryLog.legacyPoNo) &&
        Objects.equals(this.warehouseId, perpetualInventoryLog.warehouseId) &&
        Objects.equals(this.currentQuantity, perpetualInventoryLog.currentQuantity) &&
        Objects.equals(this.outstandingPickQuantity, perpetualInventoryLog.outstandingPickQuantity) &&
        Objects.equals(this.address, perpetualInventoryLog.address) &&
        Objects.equals(this.warehouseLocationId, perpetualInventoryLog.warehouseLocationId) &&
        Objects.equals(this.locationStatus, perpetualInventoryLog.locationStatus) &&
        Objects.equals(this.orderDate, perpetualInventoryLog.orderDate) &&
        Objects.equals(this.receiptStatus, perpetualInventoryLog.receiptStatus) &&
        Objects.equals(this.factCost, perpetualInventoryLog.factCost) &&
        Objects.equals(this.mlCost, perpetualInventoryLog.mlCost) &&
        Objects.equals(this.sku, perpetualInventoryLog.sku) &&
        Objects.equals(this.orderQuantity, perpetualInventoryLog.orderQuantity) &&
        Objects.equals(this.requestedDeliveryDate, perpetualInventoryLog.requestedDeliveryDate) &&
        Objects.equals(this.unitCode, perpetualInventoryLog.unitCode) &&
        Objects.equals(this.wrapCode, perpetualInventoryLog.wrapCode) &&
        Objects.equals(this.unitsPerWrap, perpetualInventoryLog.unitsPerWrap) &&
        Objects.equals(this.cost, perpetualInventoryLog.cost) &&
        Objects.equals(this.sell, perpetualInventoryLog.sell) &&
        Objects.equals(this.pricingPer, perpetualInventoryLog.pricingPer) &&
        Objects.equals(this.maxFreight, perpetualInventoryLog.maxFreight) &&
        Objects.equals(this.chargeFreight, perpetualInventoryLog.chargeFreight) &&
        Objects.equals(this.maxOther, perpetualInventoryLog.maxOther) &&
        Objects.equals(this.distDate, perpetualInventoryLog.distDate) &&
        Objects.equals(this.expirationDate, perpetualInventoryLog.expirationDate) &&
        Objects.equals(this.voidDate, perpetualInventoryLog.voidDate) &&
        Objects.equals(this.freezeAction, perpetualInventoryLog.freezeAction) &&
        Objects.equals(this.revDate, perpetualInventoryLog.revDate) &&
        Objects.equals(this.artBack, perpetualInventoryLog.artBack) &&
        Objects.equals(this.origin, perpetualInventoryLog.origin) &&
        Objects.equals(this.sample, perpetualInventoryLog.sample) &&
        Objects.equals(this.sampleTo, perpetualInventoryLog.sampleTo) &&
        Objects.equals(this.maxOvers, perpetualInventoryLog.maxOvers) &&
        Objects.equals(this.maxUnders, perpetualInventoryLog.maxUnders) &&
        Objects.equals(this.receivedSfp, perpetualInventoryLog.receivedSfp) &&
        Objects.equals(this.budgetCode, perpetualInventoryLog.budgetCode) &&
        Objects.equals(this.accountingCode, perpetualInventoryLog.accountingCode) &&
        Objects.equals(this.taxExempt, perpetualInventoryLog.taxExempt) &&
        Objects.equals(this.capitalize, perpetualInventoryLog.capitalize) &&
        Objects.equals(this.accrual, perpetualInventoryLog.accrual) &&
        Objects.equals(this.oddQuantity, perpetualInventoryLog.oddQuantity) &&
        Objects.equals(this.freightCost, perpetualInventoryLog.freightCost) &&
        Objects.equals(this.receivedDate, perpetualInventoryLog.receivedDate) &&
        Objects.equals(this.receivedQuantity, perpetualInventoryLog.receivedQuantity) &&
        Objects.equals(this.fromProd, perpetualInventoryLog.fromProd) &&
        Objects.equals(this.sfpComplete, perpetualInventoryLog.sfpComplete) &&
        Objects.equals(this.endQuantity, perpetualInventoryLog.endQuantity) &&
        Objects.equals(this.endVal, perpetualInventoryLog.endVal) &&
        Objects.equals(this.endFact, perpetualInventoryLog.endFact) &&
        Objects.equals(this.interimQuantity, perpetualInventoryLog.interimQuantity) &&
        Objects.equals(this.interimVal, perpetualInventoryLog.interimVal) &&
        Objects.equals(this.interimFact, perpetualInventoryLog.interimFact) &&
        Objects.equals(this.lastAct, perpetualInventoryLog.lastAct) &&
        Objects.equals(this.weightPerWrap, perpetualInventoryLog.weightPerWrap) &&
        Objects.equals(this.norcs, perpetualInventoryLog.norcs) &&
        Objects.equals(this.vendorId, perpetualInventoryLog.vendorId) &&
        Objects.equals(this.bsVendor, perpetualInventoryLog.bsVendor) &&
        Objects.equals(this.mlVendor, perpetualInventoryLog.mlVendor) &&
        Objects.equals(this.receiptNo, perpetualInventoryLog.receiptNo) &&
        Objects.equals(this.paidFull, perpetualInventoryLog.paidFull) &&
        Objects.equals(this.enteredBy, perpetualInventoryLog.enteredBy) &&
        Objects.equals(this.receivedBy, perpetualInventoryLog.receivedBy) &&
        Objects.equals(this.lineNo, perpetualInventoryLog.lineNo) &&
        Objects.equals(this.prodLot, perpetualInventoryLog.prodLot) &&
        Objects.equals(this.productIdTag, perpetualInventoryLog.productIdTag) &&
        Objects.equals(this.unitsPerCase, perpetualInventoryLog.unitsPerCase) &&
        Objects.equals(this.caseWeight, perpetualInventoryLog.caseWeight) &&
        Objects.equals(this.height, perpetualInventoryLog.height) &&
        Objects.equals(this.width, perpetualInventoryLog.width) &&
        Objects.equals(this.length, perpetualInventoryLog.length) &&
        Objects.equals(this.dockDate, perpetualInventoryLog.dockDate) &&
        Objects.equals(this.impressions, perpetualInventoryLog.impressions) &&
        Objects.equals(this.asnLine, perpetualInventoryLog.asnLine) &&
        Objects.equals(this.updatedAt, perpetualInventoryLog.updatedAt) &&
        Objects.equals(this.itemForwardLotMixingRule, perpetualInventoryLog.itemForwardLotMixingRule) &&
        Objects.equals(this.itemStorageLotMixingRule, perpetualInventoryLog.itemStorageLotMixingRule) &&
        Objects.equals(this.itemForwardItemMixingRule, perpetualInventoryLog.itemForwardItemMixingRule) &&
        Objects.equals(this.itemStorageItemMixingRule, perpetualInventoryLog.itemStorageItemMixingRule) &&
        Objects.equals(this.itemAllocationRule, perpetualInventoryLog.itemAllocationRule) &&
        Objects.equals(this.itemBarcodeField, perpetualInventoryLog.itemBarcodeField) &&
        Objects.equals(this.itemWarehouseDisplayField, perpetualInventoryLog.itemWarehouseDisplayField) &&
        Objects.equals(this.itemProductIdTagSchemeId, perpetualInventoryLog.itemProductIdTagSchemeId) &&
        Objects.equals(this.customFields, perpetualInventoryLog.customFields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, itemReceiptLocationId, itemReceiptId, asnId, lobId, legacyPoNo, warehouseId, currentQuantity, outstandingPickQuantity, address, warehouseLocationId, locationStatus, orderDate, receiptStatus, factCost, mlCost, sku, orderQuantity, requestedDeliveryDate, unitCode, wrapCode, unitsPerWrap, cost, sell, pricingPer, maxFreight, chargeFreight, maxOther, distDate, expirationDate, voidDate, freezeAction, revDate, artBack, origin, sample, sampleTo, maxOvers, maxUnders, receivedSfp, budgetCode, accountingCode, taxExempt, capitalize, accrual, oddQuantity, freightCost, receivedDate, receivedQuantity, fromProd, sfpComplete, endQuantity, endVal, endFact, interimQuantity, interimVal, interimFact, lastAct, weightPerWrap, norcs, vendorId, bsVendor, mlVendor, receiptNo, paidFull, enteredBy, receivedBy, lineNo, prodLot, productIdTag, unitsPerCase, caseWeight, height, width, length, dockDate, impressions, asnLine, updatedAt, itemForwardLotMixingRule, itemStorageLotMixingRule, itemForwardItemMixingRule, itemStorageItemMixingRule, itemAllocationRule, itemBarcodeField, itemWarehouseDisplayField, itemProductIdTagSchemeId, customFields);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PerpetualInventoryLog {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    itemReceiptLocationId: ").append(toIndentedString(itemReceiptLocationId)).append("\n");
    sb.append("    itemReceiptId: ").append(toIndentedString(itemReceiptId)).append("\n");
    sb.append("    asnId: ").append(toIndentedString(asnId)).append("\n");
    sb.append("    lobId: ").append(toIndentedString(lobId)).append("\n");
    sb.append("    legacyPoNo: ").append(toIndentedString(legacyPoNo)).append("\n");
    sb.append("    warehouseId: ").append(toIndentedString(warehouseId)).append("\n");
    sb.append("    currentQuantity: ").append(toIndentedString(currentQuantity)).append("\n");
    sb.append("    outstandingPickQuantity: ").append(toIndentedString(outstandingPickQuantity)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    warehouseLocationId: ").append(toIndentedString(warehouseLocationId)).append("\n");
    sb.append("    locationStatus: ").append(toIndentedString(locationStatus)).append("\n");
    sb.append("    orderDate: ").append(toIndentedString(orderDate)).append("\n");
    sb.append("    receiptStatus: ").append(toIndentedString(receiptStatus)).append("\n");
    sb.append("    factCost: ").append(toIndentedString(factCost)).append("\n");
    sb.append("    mlCost: ").append(toIndentedString(mlCost)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    orderQuantity: ").append(toIndentedString(orderQuantity)).append("\n");
    sb.append("    requestedDeliveryDate: ").append(toIndentedString(requestedDeliveryDate)).append("\n");
    sb.append("    unitCode: ").append(toIndentedString(unitCode)).append("\n");
    sb.append("    wrapCode: ").append(toIndentedString(wrapCode)).append("\n");
    sb.append("    unitsPerWrap: ").append(toIndentedString(unitsPerWrap)).append("\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    sell: ").append(toIndentedString(sell)).append("\n");
    sb.append("    pricingPer: ").append(toIndentedString(pricingPer)).append("\n");
    sb.append("    maxFreight: ").append(toIndentedString(maxFreight)).append("\n");
    sb.append("    chargeFreight: ").append(toIndentedString(chargeFreight)).append("\n");
    sb.append("    maxOther: ").append(toIndentedString(maxOther)).append("\n");
    sb.append("    distDate: ").append(toIndentedString(distDate)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    voidDate: ").append(toIndentedString(voidDate)).append("\n");
    sb.append("    freezeAction: ").append(toIndentedString(freezeAction)).append("\n");
    sb.append("    revDate: ").append(toIndentedString(revDate)).append("\n");
    sb.append("    artBack: ").append(toIndentedString(artBack)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    sample: ").append(toIndentedString(sample)).append("\n");
    sb.append("    sampleTo: ").append(toIndentedString(sampleTo)).append("\n");
    sb.append("    maxOvers: ").append(toIndentedString(maxOvers)).append("\n");
    sb.append("    maxUnders: ").append(toIndentedString(maxUnders)).append("\n");
    sb.append("    receivedSfp: ").append(toIndentedString(receivedSfp)).append("\n");
    sb.append("    budgetCode: ").append(toIndentedString(budgetCode)).append("\n");
    sb.append("    accountingCode: ").append(toIndentedString(accountingCode)).append("\n");
    sb.append("    taxExempt: ").append(toIndentedString(taxExempt)).append("\n");
    sb.append("    capitalize: ").append(toIndentedString(capitalize)).append("\n");
    sb.append("    accrual: ").append(toIndentedString(accrual)).append("\n");
    sb.append("    oddQuantity: ").append(toIndentedString(oddQuantity)).append("\n");
    sb.append("    freightCost: ").append(toIndentedString(freightCost)).append("\n");
    sb.append("    receivedDate: ").append(toIndentedString(receivedDate)).append("\n");
    sb.append("    receivedQuantity: ").append(toIndentedString(receivedQuantity)).append("\n");
    sb.append("    fromProd: ").append(toIndentedString(fromProd)).append("\n");
    sb.append("    sfpComplete: ").append(toIndentedString(sfpComplete)).append("\n");
    sb.append("    endQuantity: ").append(toIndentedString(endQuantity)).append("\n");
    sb.append("    endVal: ").append(toIndentedString(endVal)).append("\n");
    sb.append("    endFact: ").append(toIndentedString(endFact)).append("\n");
    sb.append("    interimQuantity: ").append(toIndentedString(interimQuantity)).append("\n");
    sb.append("    interimVal: ").append(toIndentedString(interimVal)).append("\n");
    sb.append("    interimFact: ").append(toIndentedString(interimFact)).append("\n");
    sb.append("    lastAct: ").append(toIndentedString(lastAct)).append("\n");
    sb.append("    weightPerWrap: ").append(toIndentedString(weightPerWrap)).append("\n");
    sb.append("    norcs: ").append(toIndentedString(norcs)).append("\n");
    sb.append("    vendorId: ").append(toIndentedString(vendorId)).append("\n");
    sb.append("    bsVendor: ").append(toIndentedString(bsVendor)).append("\n");
    sb.append("    mlVendor: ").append(toIndentedString(mlVendor)).append("\n");
    sb.append("    receiptNo: ").append(toIndentedString(receiptNo)).append("\n");
    sb.append("    paidFull: ").append(toIndentedString(paidFull)).append("\n");
    sb.append("    enteredBy: ").append(toIndentedString(enteredBy)).append("\n");
    sb.append("    receivedBy: ").append(toIndentedString(receivedBy)).append("\n");
    sb.append("    lineNo: ").append(toIndentedString(lineNo)).append("\n");
    sb.append("    prodLot: ").append(toIndentedString(prodLot)).append("\n");
    sb.append("    productIdTag: ").append(toIndentedString(productIdTag)).append("\n");
    sb.append("    unitsPerCase: ").append(toIndentedString(unitsPerCase)).append("\n");
    sb.append("    caseWeight: ").append(toIndentedString(caseWeight)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    dockDate: ").append(toIndentedString(dockDate)).append("\n");
    sb.append("    impressions: ").append(toIndentedString(impressions)).append("\n");
    sb.append("    asnLine: ").append(toIndentedString(asnLine)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    itemForwardLotMixingRule: ").append(toIndentedString(itemForwardLotMixingRule)).append("\n");
    sb.append("    itemStorageLotMixingRule: ").append(toIndentedString(itemStorageLotMixingRule)).append("\n");
    sb.append("    itemForwardItemMixingRule: ").append(toIndentedString(itemForwardItemMixingRule)).append("\n");
    sb.append("    itemStorageItemMixingRule: ").append(toIndentedString(itemStorageItemMixingRule)).append("\n");
    sb.append("    itemAllocationRule: ").append(toIndentedString(itemAllocationRule)).append("\n");
    sb.append("    itemBarcodeField: ").append(toIndentedString(itemBarcodeField)).append("\n");
    sb.append("    itemWarehouseDisplayField: ").append(toIndentedString(itemWarehouseDisplayField)).append("\n");
    sb.append("    itemProductIdTagSchemeId: ").append(toIndentedString(itemProductIdTagSchemeId)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


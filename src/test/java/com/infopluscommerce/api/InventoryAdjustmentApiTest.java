/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.InventoryAdjustment;
import com.infopluscommerce.model.RecordFile;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InventoryAdjustmentApi
 */
@Ignore
public class InventoryAdjustmentApiTest {

    private final InventoryAdjustmentApi api = new InventoryAdjustmentApi();

    
    /**
     * Add new audit for an inventoryAdjustment
     *
     * Adds an audit to an existing inventoryAdjustment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addInventoryAdjustmentAuditTest() throws ApiException {
        Integer inventoryAdjustmentId = null;
        String inventoryAdjustmentAudit = null;
        api.addInventoryAdjustmentAudit(inventoryAdjustmentId, inventoryAdjustmentAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to an inventoryAdjustment
     *
     * Adds a file to an existing inventoryAdjustment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addInventoryAdjustmentFileTest() throws ApiException {
        Integer inventoryAdjustmentId = null;
        String fileName = null;
        api.addInventoryAdjustmentFile(inventoryAdjustmentId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to an inventoryAdjustment by URL.
     *
     * Adds a file to an existing inventoryAdjustment by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addInventoryAdjustmentFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer inventoryAdjustmentId = null;
        api.addInventoryAdjustmentFileByURL(body, inventoryAdjustmentId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for an inventoryAdjustment.
     *
     * Adds a tag to an existing inventoryAdjustment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addInventoryAdjustmentTagTest() throws ApiException {
        Integer inventoryAdjustmentId = null;
        String inventoryAdjustmentTag = null;
        api.addInventoryAdjustmentTag(inventoryAdjustmentId, inventoryAdjustmentTag);

        // TODO: test validations
    }
    
    /**
     * Delete a file for an inventoryAdjustment.
     *
     * Deletes an existing inventoryAdjustment file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteInventoryAdjustmentFileTest() throws ApiException {
        Integer inventoryAdjustmentId = null;
        Integer fileId = null;
        api.deleteInventoryAdjustmentFile(inventoryAdjustmentId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for an inventoryAdjustment.
     *
     * Deletes an existing inventoryAdjustment tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteInventoryAdjustmentTagTest() throws ApiException {
        Integer inventoryAdjustmentId = null;
        String inventoryAdjustmentTag = null;
        api.deleteInventoryAdjustmentTag(inventoryAdjustmentId, inventoryAdjustmentTag);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated an inventoryAdjustment by id
     *
     * Returns a duplicated inventoryAdjustment identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateInventoryAdjustmentByIdTest() throws ApiException {
        Integer inventoryAdjustmentId = null;
        InventoryAdjustment response = api.getDuplicateInventoryAdjustmentById(inventoryAdjustmentId);

        // TODO: test validations
    }
    
    /**
     * Search inventoryAdjustments by filter
     *
     * Returns the list of inventoryAdjustments that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInventoryAdjustmentByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<InventoryAdjustment> response = api.getInventoryAdjustmentByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get an inventoryAdjustment by id
     *
     * Returns the inventoryAdjustment identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInventoryAdjustmentByIdTest() throws ApiException {
        Integer inventoryAdjustmentId = null;
        InventoryAdjustment response = api.getInventoryAdjustmentById(inventoryAdjustmentId);

        // TODO: test validations
    }
    
    /**
     * Get the files for an inventoryAdjustment.
     *
     * Get all existing inventoryAdjustment files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInventoryAdjustmentFilesTest() throws ApiException {
        Integer inventoryAdjustmentId = null;
        api.getInventoryAdjustmentFiles(inventoryAdjustmentId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for an inventoryAdjustment.
     *
     * Get all existing inventoryAdjustment tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInventoryAdjustmentTagsTest() throws ApiException {
        Integer inventoryAdjustmentId = null;
        api.getInventoryAdjustmentTags(inventoryAdjustmentId);

        // TODO: test validations
    }
    
    /**
     * Update an inventoryAdjustment custom fields
     *
     * Updates an existing inventoryAdjustment custom fields using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateInventoryAdjustmentCustomFieldsTest() throws ApiException {
        InventoryAdjustment body = null;
        api.updateInventoryAdjustmentCustomFields(body);

        // TODO: test validations
    }
    
}

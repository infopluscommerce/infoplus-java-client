/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.Aisle;
import com.infopluscommerce.model.ModelApiResponse;
import com.infopluscommerce.model.RecordFile;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AisleApi
 */
@Ignore
public class AisleApiTest {

    private final AisleApi api = new AisleApi();

    
    /**
     * Create an aisle
     *
     * Inserts a new aisle using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addAisleTest() throws ApiException {
        Aisle body = null;
        Aisle response = api.addAisle(body);

        // TODO: test validations
    }
    
    /**
     * Add new audit for an aisle
     *
     * Adds an audit to an existing aisle.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addAisleAuditTest() throws ApiException {
        Integer aisleId = null;
        String aisleAudit = null;
        api.addAisleAudit(aisleId, aisleAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to an aisle
     *
     * Adds a file to an existing aisle.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addAisleFileTest() throws ApiException {
        Integer aisleId = null;
        String fileName = null;
        api.addAisleFile(aisleId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to an aisle by URL.
     *
     * Adds a file to an existing aisle by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addAisleFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer aisleId = null;
        api.addAisleFileByURL(body, aisleId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for an aisle.
     *
     * Adds a tag to an existing aisle.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addAisleTagTest() throws ApiException {
        Integer aisleId = null;
        String aisleTag = null;
        api.addAisleTag(aisleId, aisleTag);

        // TODO: test validations
    }
    
    /**
     * Delete an aisle
     *
     * Deletes the aisle identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAisleTest() throws ApiException {
        Integer aisleId = null;
        api.deleteAisle(aisleId);

        // TODO: test validations
    }
    
    /**
     * Delete a file for an aisle.
     *
     * Deletes an existing aisle file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAisleFileTest() throws ApiException {
        Integer aisleId = null;
        Integer fileId = null;
        api.deleteAisleFile(aisleId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for an aisle.
     *
     * Deletes an existing aisle tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAisleTagTest() throws ApiException {
        Integer aisleId = null;
        String aisleTag = null;
        api.deleteAisleTag(aisleId, aisleTag);

        // TODO: test validations
    }
    
    /**
     * Search aisles by filter
     *
     * Returns the list of aisles that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAisleByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<Aisle> response = api.getAisleByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get an aisle by id
     *
     * Returns the aisle identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAisleByIdTest() throws ApiException {
        Integer aisleId = null;
        Aisle response = api.getAisleById(aisleId);

        // TODO: test validations
    }
    
    /**
     * Get the files for an aisle.
     *
     * Get all existing aisle files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAisleFilesTest() throws ApiException {
        Integer aisleId = null;
        api.getAisleFiles(aisleId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for an aisle.
     *
     * Get all existing aisle tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAisleTagsTest() throws ApiException {
        Integer aisleId = null;
        api.getAisleTags(aisleId);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated an aisle by id
     *
     * Returns a duplicated aisle identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateAisleByIdTest() throws ApiException {
        Integer aisleId = null;
        Aisle response = api.getDuplicateAisleById(aisleId);

        // TODO: test validations
    }
    
    /**
     * Update an aisle
     *
     * Updates an existing aisle using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAisleTest() throws ApiException {
        Aisle body = null;
        api.updateAisle(body);

        // TODO: test validations
    }
    
    /**
     * Update an aisle custom fields
     *
     * Updates an existing aisle custom fields using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAisleCustomFieldsTest() throws ApiException {
        Aisle body = null;
        api.updateAisleCustomFields(body);

        // TODO: test validations
    }
    
}

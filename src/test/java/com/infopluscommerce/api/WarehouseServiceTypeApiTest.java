/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.ModelApiResponse;
import com.infopluscommerce.model.RecordFile;
import com.infopluscommerce.model.WarehouseServiceType;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WarehouseServiceTypeApi
 */
@Ignore
public class WarehouseServiceTypeApiTest {

    private final WarehouseServiceTypeApi api = new WarehouseServiceTypeApi();

    
    /**
     * Create a warehouseServiceType
     *
     * Inserts a new warehouseServiceType using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addWarehouseServiceTypeTest() throws ApiException {
        WarehouseServiceType body = null;
        WarehouseServiceType response = api.addWarehouseServiceType(body);

        // TODO: test validations
    }
    
    /**
     * Add new audit for a warehouseServiceType
     *
     * Adds an audit to an existing warehouseServiceType.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addWarehouseServiceTypeAuditTest() throws ApiException {
        Integer warehouseServiceTypeId = null;
        String warehouseServiceTypeAudit = null;
        api.addWarehouseServiceTypeAudit(warehouseServiceTypeId, warehouseServiceTypeAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a warehouseServiceType
     *
     * Adds a file to an existing warehouseServiceType.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addWarehouseServiceTypeFileTest() throws ApiException {
        Integer warehouseServiceTypeId = null;
        String fileName = null;
        api.addWarehouseServiceTypeFile(warehouseServiceTypeId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a warehouseServiceType by URL.
     *
     * Adds a file to an existing warehouseServiceType by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addWarehouseServiceTypeFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer warehouseServiceTypeId = null;
        api.addWarehouseServiceTypeFileByURL(body, warehouseServiceTypeId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for a warehouseServiceType.
     *
     * Adds a tag to an existing warehouseServiceType.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addWarehouseServiceTypeTagTest() throws ApiException {
        Integer warehouseServiceTypeId = null;
        String warehouseServiceTypeTag = null;
        api.addWarehouseServiceTypeTag(warehouseServiceTypeId, warehouseServiceTypeTag);

        // TODO: test validations
    }
    
    /**
     * Delete a warehouseServiceType
     *
     * Deletes the warehouseServiceType identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteWarehouseServiceTypeTest() throws ApiException {
        Integer warehouseServiceTypeId = null;
        api.deleteWarehouseServiceType(warehouseServiceTypeId);

        // TODO: test validations
    }
    
    /**
     * Delete a file for a warehouseServiceType.
     *
     * Deletes an existing warehouseServiceType file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteWarehouseServiceTypeFileTest() throws ApiException {
        Integer warehouseServiceTypeId = null;
        Integer fileId = null;
        api.deleteWarehouseServiceTypeFile(warehouseServiceTypeId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for a warehouseServiceType.
     *
     * Deletes an existing warehouseServiceType tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteWarehouseServiceTypeTagTest() throws ApiException {
        Integer warehouseServiceTypeId = null;
        String warehouseServiceTypeTag = null;
        api.deleteWarehouseServiceTypeTag(warehouseServiceTypeId, warehouseServiceTypeTag);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated a warehouseServiceType by id
     *
     * Returns a duplicated warehouseServiceType identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateWarehouseServiceTypeByIdTest() throws ApiException {
        Integer warehouseServiceTypeId = null;
        WarehouseServiceType response = api.getDuplicateWarehouseServiceTypeById(warehouseServiceTypeId);

        // TODO: test validations
    }
    
    /**
     * Search warehouseServiceTypes by filter
     *
     * Returns the list of warehouseServiceTypes that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWarehouseServiceTypeByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<WarehouseServiceType> response = api.getWarehouseServiceTypeByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get a warehouseServiceType by id
     *
     * Returns the warehouseServiceType identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWarehouseServiceTypeByIdTest() throws ApiException {
        Integer warehouseServiceTypeId = null;
        WarehouseServiceType response = api.getWarehouseServiceTypeById(warehouseServiceTypeId);

        // TODO: test validations
    }
    
    /**
     * Get the files for a warehouseServiceType.
     *
     * Get all existing warehouseServiceType files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWarehouseServiceTypeFilesTest() throws ApiException {
        Integer warehouseServiceTypeId = null;
        api.getWarehouseServiceTypeFiles(warehouseServiceTypeId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for a warehouseServiceType.
     *
     * Get all existing warehouseServiceType tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWarehouseServiceTypeTagsTest() throws ApiException {
        Integer warehouseServiceTypeId = null;
        api.getWarehouseServiceTypeTags(warehouseServiceTypeId);

        // TODO: test validations
    }
    
    /**
     * Update a warehouseServiceType
     *
     * Updates an existing warehouseServiceType using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateWarehouseServiceTypeTest() throws ApiException {
        WarehouseServiceType body = null;
        api.updateWarehouseServiceType(body);

        // TODO: test validations
    }
    
    /**
     * Update a warehouseServiceType custom fields
     *
     * Updates an existing warehouseServiceType custom fields using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateWarehouseServiceTypeCustomFieldsTest() throws ApiException {
        WarehouseServiceType body = null;
        api.updateWarehouseServiceTypeCustomFields(body);

        // TODO: test validations
    }
    
}

/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.RecordFile;
import com.infopluscommerce.model.WarehouseInventory;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WarehouseInventoryApi
 */
@Ignore
public class WarehouseInventoryApiTest {

    private final WarehouseInventoryApi api = new WarehouseInventoryApi();

    
    /**
     * Add new audit for a warehouseInventory
     *
     * Adds an audit to an existing warehouseInventory.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addWarehouseInventoryAuditTest() throws ApiException {
        Integer warehouseInventoryId = null;
        String warehouseInventoryAudit = null;
        api.addWarehouseInventoryAudit(warehouseInventoryId, warehouseInventoryAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a warehouseInventory
     *
     * Adds a file to an existing warehouseInventory.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addWarehouseInventoryFileTest() throws ApiException {
        Integer warehouseInventoryId = null;
        String fileName = null;
        api.addWarehouseInventoryFile(warehouseInventoryId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a warehouseInventory by URL.
     *
     * Adds a file to an existing warehouseInventory by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addWarehouseInventoryFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer warehouseInventoryId = null;
        api.addWarehouseInventoryFileByURL(body, warehouseInventoryId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for a warehouseInventory.
     *
     * Adds a tag to an existing warehouseInventory.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addWarehouseInventoryTagTest() throws ApiException {
        Integer warehouseInventoryId = null;
        String warehouseInventoryTag = null;
        api.addWarehouseInventoryTag(warehouseInventoryId, warehouseInventoryTag);

        // TODO: test validations
    }
    
    /**
     * Delete a file for a warehouseInventory.
     *
     * Deletes an existing warehouseInventory file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteWarehouseInventoryFileTest() throws ApiException {
        Integer warehouseInventoryId = null;
        Integer fileId = null;
        api.deleteWarehouseInventoryFile(warehouseInventoryId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for a warehouseInventory.
     *
     * Deletes an existing warehouseInventory tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteWarehouseInventoryTagTest() throws ApiException {
        Integer warehouseInventoryId = null;
        String warehouseInventoryTag = null;
        api.deleteWarehouseInventoryTag(warehouseInventoryId, warehouseInventoryTag);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated a warehouseInventory by id
     *
     * Returns a duplicated warehouseInventory identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateWarehouseInventoryByIdTest() throws ApiException {
        Integer warehouseInventoryId = null;
        WarehouseInventory response = api.getDuplicateWarehouseInventoryById(warehouseInventoryId);

        // TODO: test validations
    }
    
    /**
     * Search warehouseInventorys by filter
     *
     * Returns the list of warehouseInventorys that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWarehouseInventoryByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<WarehouseInventory> response = api.getWarehouseInventoryByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get a warehouseInventory by id
     *
     * Returns the warehouseInventory identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWarehouseInventoryByIdTest() throws ApiException {
        Integer warehouseInventoryId = null;
        WarehouseInventory response = api.getWarehouseInventoryById(warehouseInventoryId);

        // TODO: test validations
    }
    
    /**
     * Get the files for a warehouseInventory.
     *
     * Get all existing warehouseInventory files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWarehouseInventoryFilesTest() throws ApiException {
        Integer warehouseInventoryId = null;
        api.getWarehouseInventoryFiles(warehouseInventoryId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for a warehouseInventory.
     *
     * Get all existing warehouseInventory tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWarehouseInventoryTagsTest() throws ApiException {
        Integer warehouseInventoryId = null;
        api.getWarehouseInventoryTags(warehouseInventoryId);

        // TODO: test validations
    }
    
}

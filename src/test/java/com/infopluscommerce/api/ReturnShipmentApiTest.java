/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.RecordFile;
import com.infopluscommerce.model.ReturnShipment;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReturnShipmentApi
 */
@Ignore
public class ReturnShipmentApiTest {

    private final ReturnShipmentApi api = new ReturnShipmentApi();

    
    /**
     * Add new audit for a returnShipment
     *
     * Adds an audit to an existing returnShipment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addReturnShipmentAuditTest() throws ApiException {
        Integer returnShipmentId = null;
        String returnShipmentAudit = null;
        api.addReturnShipmentAudit(returnShipmentId, returnShipmentAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a returnShipment
     *
     * Adds a file to an existing returnShipment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addReturnShipmentFileTest() throws ApiException {
        Integer returnShipmentId = null;
        String fileName = null;
        api.addReturnShipmentFile(returnShipmentId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a returnShipment by URL.
     *
     * Adds a file to an existing returnShipment by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addReturnShipmentFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer returnShipmentId = null;
        api.addReturnShipmentFileByURL(body, returnShipmentId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for a returnShipment.
     *
     * Adds a tag to an existing returnShipment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addReturnShipmentTagTest() throws ApiException {
        Integer returnShipmentId = null;
        String returnShipmentTag = null;
        api.addReturnShipmentTag(returnShipmentId, returnShipmentTag);

        // TODO: test validations
    }
    
    /**
     * Delete a file for a returnShipment.
     *
     * Deletes an existing returnShipment file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteReturnShipmentFileTest() throws ApiException {
        Integer returnShipmentId = null;
        Integer fileId = null;
        api.deleteReturnShipmentFile(returnShipmentId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for a returnShipment.
     *
     * Deletes an existing returnShipment tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteReturnShipmentTagTest() throws ApiException {
        Integer returnShipmentId = null;
        String returnShipmentTag = null;
        api.deleteReturnShipmentTag(returnShipmentId, returnShipmentTag);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated a returnShipment by id
     *
     * Returns a duplicated returnShipment identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateReturnShipmentByIdTest() throws ApiException {
        Integer returnShipmentId = null;
        ReturnShipment response = api.getDuplicateReturnShipmentById(returnShipmentId);

        // TODO: test validations
    }
    
    /**
     * Search returnShipments by filter
     *
     * Returns the list of returnShipments that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReturnShipmentByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<ReturnShipment> response = api.getReturnShipmentByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get a returnShipment by id
     *
     * Returns the returnShipment identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReturnShipmentByIdTest() throws ApiException {
        Integer returnShipmentId = null;
        ReturnShipment response = api.getReturnShipmentById(returnShipmentId);

        // TODO: test validations
    }
    
    /**
     * Get the files for a returnShipment.
     *
     * Get all existing returnShipment files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReturnShipmentFilesTest() throws ApiException {
        Integer returnShipmentId = null;
        api.getReturnShipmentFiles(returnShipmentId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for a returnShipment.
     *
     * Get all existing returnShipment tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReturnShipmentTagsTest() throws ApiException {
        Integer returnShipmentId = null;
        api.getReturnShipmentTags(returnShipmentId);

        // TODO: test validations
    }
    
    /**
     * Update a returnShipment custom fields
     *
     * Updates an existing returnShipment custom fields using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateReturnShipmentCustomFieldsTest() throws ApiException {
        ReturnShipment body = null;
        api.updateReturnShipmentCustomFields(body);

        // TODO: test validations
    }
    
}

/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.ModelApiResponse;
import com.infopluscommerce.model.NonBusinessDay;
import com.infopluscommerce.model.RecordFile;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NonBusinessDayApi
 */
@Ignore
public class NonBusinessDayApiTest {

    private final NonBusinessDayApi api = new NonBusinessDayApi();

    
    /**
     * Create a nonBusinessDay
     *
     * Inserts a new nonBusinessDay using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addNonBusinessDayTest() throws ApiException {
        NonBusinessDay body = null;
        NonBusinessDay response = api.addNonBusinessDay(body);

        // TODO: test validations
    }
    
    /**
     * Add new audit for a nonBusinessDay
     *
     * Adds an audit to an existing nonBusinessDay.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addNonBusinessDayAuditTest() throws ApiException {
        Integer nonBusinessDayId = null;
        String nonBusinessDayAudit = null;
        api.addNonBusinessDayAudit(nonBusinessDayId, nonBusinessDayAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a nonBusinessDay
     *
     * Adds a file to an existing nonBusinessDay.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addNonBusinessDayFileTest() throws ApiException {
        Integer nonBusinessDayId = null;
        String fileName = null;
        api.addNonBusinessDayFile(nonBusinessDayId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a nonBusinessDay by URL.
     *
     * Adds a file to an existing nonBusinessDay by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addNonBusinessDayFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer nonBusinessDayId = null;
        api.addNonBusinessDayFileByURL(body, nonBusinessDayId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for a nonBusinessDay.
     *
     * Adds a tag to an existing nonBusinessDay.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addNonBusinessDayTagTest() throws ApiException {
        Integer nonBusinessDayId = null;
        String nonBusinessDayTag = null;
        api.addNonBusinessDayTag(nonBusinessDayId, nonBusinessDayTag);

        // TODO: test validations
    }
    
    /**
     * Delete a nonBusinessDay
     *
     * Deletes the nonBusinessDay identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNonBusinessDayTest() throws ApiException {
        Integer nonBusinessDayId = null;
        api.deleteNonBusinessDay(nonBusinessDayId);

        // TODO: test validations
    }
    
    /**
     * Delete a file for a nonBusinessDay.
     *
     * Deletes an existing nonBusinessDay file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNonBusinessDayFileTest() throws ApiException {
        Integer nonBusinessDayId = null;
        Integer fileId = null;
        api.deleteNonBusinessDayFile(nonBusinessDayId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for a nonBusinessDay.
     *
     * Deletes an existing nonBusinessDay tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNonBusinessDayTagTest() throws ApiException {
        Integer nonBusinessDayId = null;
        String nonBusinessDayTag = null;
        api.deleteNonBusinessDayTag(nonBusinessDayId, nonBusinessDayTag);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated a nonBusinessDay by id
     *
     * Returns a duplicated nonBusinessDay identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateNonBusinessDayByIdTest() throws ApiException {
        Integer nonBusinessDayId = null;
        NonBusinessDay response = api.getDuplicateNonBusinessDayById(nonBusinessDayId);

        // TODO: test validations
    }
    
    /**
     * Search nonBusinessDays by filter
     *
     * Returns the list of nonBusinessDays that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNonBusinessDayByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<NonBusinessDay> response = api.getNonBusinessDayByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get a nonBusinessDay by id
     *
     * Returns the nonBusinessDay identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNonBusinessDayByIdTest() throws ApiException {
        Integer nonBusinessDayId = null;
        NonBusinessDay response = api.getNonBusinessDayById(nonBusinessDayId);

        // TODO: test validations
    }
    
    /**
     * Get the files for a nonBusinessDay.
     *
     * Get all existing nonBusinessDay files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNonBusinessDayFilesTest() throws ApiException {
        Integer nonBusinessDayId = null;
        api.getNonBusinessDayFiles(nonBusinessDayId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for a nonBusinessDay.
     *
     * Get all existing nonBusinessDay tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNonBusinessDayTagsTest() throws ApiException {
        Integer nonBusinessDayId = null;
        api.getNonBusinessDayTags(nonBusinessDayId);

        // TODO: test validations
    }
    
    /**
     * Update a nonBusinessDay
     *
     * Updates an existing nonBusinessDay using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateNonBusinessDayTest() throws ApiException {
        NonBusinessDay body = null;
        api.updateNonBusinessDay(body);

        // TODO: test validations
    }
    
}

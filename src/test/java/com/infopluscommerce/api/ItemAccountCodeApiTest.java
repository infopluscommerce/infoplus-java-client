/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.ItemAccountCode;
import com.infopluscommerce.model.ModelApiResponse;
import com.infopluscommerce.model.RecordFile;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ItemAccountCodeApi
 */
@Ignore
public class ItemAccountCodeApiTest {

    private final ItemAccountCodeApi api = new ItemAccountCodeApi();

    
    /**
     * Create an itemAccountCode
     *
     * Inserts a new itemAccountCode using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addItemAccountCodeTest() throws ApiException {
        ItemAccountCode body = null;
        ItemAccountCode response = api.addItemAccountCode(body);

        // TODO: test validations
    }
    
    /**
     * Add new audit for an itemAccountCode
     *
     * Adds an audit to an existing itemAccountCode.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addItemAccountCodeAuditTest() throws ApiException {
        Integer itemAccountCodeId = null;
        String itemAccountCodeAudit = null;
        api.addItemAccountCodeAudit(itemAccountCodeId, itemAccountCodeAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to an itemAccountCode
     *
     * Adds a file to an existing itemAccountCode.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addItemAccountCodeFileTest() throws ApiException {
        Integer itemAccountCodeId = null;
        String fileName = null;
        api.addItemAccountCodeFile(itemAccountCodeId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to an itemAccountCode by URL.
     *
     * Adds a file to an existing itemAccountCode by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addItemAccountCodeFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer itemAccountCodeId = null;
        api.addItemAccountCodeFileByURL(body, itemAccountCodeId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for an itemAccountCode.
     *
     * Adds a tag to an existing itemAccountCode.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addItemAccountCodeTagTest() throws ApiException {
        Integer itemAccountCodeId = null;
        String itemAccountCodeTag = null;
        api.addItemAccountCodeTag(itemAccountCodeId, itemAccountCodeTag);

        // TODO: test validations
    }
    
    /**
     * Delete an itemAccountCode
     *
     * Deletes the itemAccountCode identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteItemAccountCodeTest() throws ApiException {
        Integer itemAccountCodeId = null;
        api.deleteItemAccountCode(itemAccountCodeId);

        // TODO: test validations
    }
    
    /**
     * Delete a file for an itemAccountCode.
     *
     * Deletes an existing itemAccountCode file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteItemAccountCodeFileTest() throws ApiException {
        Integer itemAccountCodeId = null;
        Integer fileId = null;
        api.deleteItemAccountCodeFile(itemAccountCodeId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for an itemAccountCode.
     *
     * Deletes an existing itemAccountCode tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteItemAccountCodeTagTest() throws ApiException {
        Integer itemAccountCodeId = null;
        String itemAccountCodeTag = null;
        api.deleteItemAccountCodeTag(itemAccountCodeId, itemAccountCodeTag);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated an itemAccountCode by id
     *
     * Returns a duplicated itemAccountCode identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateItemAccountCodeByIdTest() throws ApiException {
        Integer itemAccountCodeId = null;
        ItemAccountCode response = api.getDuplicateItemAccountCodeById(itemAccountCodeId);

        // TODO: test validations
    }
    
    /**
     * Search itemAccountCodes by filter
     *
     * Returns the list of itemAccountCodes that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getItemAccountCodeByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<ItemAccountCode> response = api.getItemAccountCodeByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get an itemAccountCode by id
     *
     * Returns the itemAccountCode identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getItemAccountCodeByIdTest() throws ApiException {
        Integer itemAccountCodeId = null;
        ItemAccountCode response = api.getItemAccountCodeById(itemAccountCodeId);

        // TODO: test validations
    }
    
    /**
     * Get the files for an itemAccountCode.
     *
     * Get all existing itemAccountCode files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getItemAccountCodeFilesTest() throws ApiException {
        Integer itemAccountCodeId = null;
        api.getItemAccountCodeFiles(itemAccountCodeId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for an itemAccountCode.
     *
     * Get all existing itemAccountCode tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getItemAccountCodeTagsTest() throws ApiException {
        Integer itemAccountCodeId = null;
        api.getItemAccountCodeTags(itemAccountCodeId);

        // TODO: test validations
    }
    
    /**
     * Update an itemAccountCode
     *
     * Updates an existing itemAccountCode using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateItemAccountCodeTest() throws ApiException {
        ItemAccountCode body = null;
        api.updateItemAccountCode(body);

        // TODO: test validations
    }
    
}

/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.ItemLowstockCode;
import com.infopluscommerce.model.ModelApiResponse;
import com.infopluscommerce.model.RecordFile;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ItemLowstockCodeApi
 */
@Ignore
public class ItemLowstockCodeApiTest {

    private final ItemLowstockCodeApi api = new ItemLowstockCodeApi();

    
    /**
     * Create an itemLowstockCode
     *
     * Inserts a new itemLowstockCode using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addItemLowstockCodeTest() throws ApiException {
        ItemLowstockCode body = null;
        ItemLowstockCode response = api.addItemLowstockCode(body);

        // TODO: test validations
    }
    
    /**
     * Add new audit for an itemLowstockCode
     *
     * Adds an audit to an existing itemLowstockCode.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addItemLowstockCodeAuditTest() throws ApiException {
        Integer itemLowstockCodeId = null;
        String itemLowstockCodeAudit = null;
        api.addItemLowstockCodeAudit(itemLowstockCodeId, itemLowstockCodeAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to an itemLowstockCode
     *
     * Adds a file to an existing itemLowstockCode.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addItemLowstockCodeFileTest() throws ApiException {
        Integer itemLowstockCodeId = null;
        String fileName = null;
        api.addItemLowstockCodeFile(itemLowstockCodeId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to an itemLowstockCode by URL.
     *
     * Adds a file to an existing itemLowstockCode by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addItemLowstockCodeFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer itemLowstockCodeId = null;
        api.addItemLowstockCodeFileByURL(body, itemLowstockCodeId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for an itemLowstockCode.
     *
     * Adds a tag to an existing itemLowstockCode.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addItemLowstockCodeTagTest() throws ApiException {
        Integer itemLowstockCodeId = null;
        String itemLowstockCodeTag = null;
        api.addItemLowstockCodeTag(itemLowstockCodeId, itemLowstockCodeTag);

        // TODO: test validations
    }
    
    /**
     * Delete an itemLowstockCode
     *
     * Deletes the itemLowstockCode identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteItemLowstockCodeTest() throws ApiException {
        Integer itemLowstockCodeId = null;
        api.deleteItemLowstockCode(itemLowstockCodeId);

        // TODO: test validations
    }
    
    /**
     * Delete a file for an itemLowstockCode.
     *
     * Deletes an existing itemLowstockCode file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteItemLowstockCodeFileTest() throws ApiException {
        Integer itemLowstockCodeId = null;
        Integer fileId = null;
        api.deleteItemLowstockCodeFile(itemLowstockCodeId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for an itemLowstockCode.
     *
     * Deletes an existing itemLowstockCode tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteItemLowstockCodeTagTest() throws ApiException {
        Integer itemLowstockCodeId = null;
        String itemLowstockCodeTag = null;
        api.deleteItemLowstockCodeTag(itemLowstockCodeId, itemLowstockCodeTag);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated an itemLowstockCode by id
     *
     * Returns a duplicated itemLowstockCode identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateItemLowstockCodeByIdTest() throws ApiException {
        Integer itemLowstockCodeId = null;
        ItemLowstockCode response = api.getDuplicateItemLowstockCodeById(itemLowstockCodeId);

        // TODO: test validations
    }
    
    /**
     * Search itemLowstockCodes by filter
     *
     * Returns the list of itemLowstockCodes that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getItemLowstockCodeByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<ItemLowstockCode> response = api.getItemLowstockCodeByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get an itemLowstockCode by id
     *
     * Returns the itemLowstockCode identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getItemLowstockCodeByIdTest() throws ApiException {
        Integer itemLowstockCodeId = null;
        ItemLowstockCode response = api.getItemLowstockCodeById(itemLowstockCodeId);

        // TODO: test validations
    }
    
    /**
     * Get the files for an itemLowstockCode.
     *
     * Get all existing itemLowstockCode files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getItemLowstockCodeFilesTest() throws ApiException {
        Integer itemLowstockCodeId = null;
        api.getItemLowstockCodeFiles(itemLowstockCodeId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for an itemLowstockCode.
     *
     * Get all existing itemLowstockCode tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getItemLowstockCodeTagsTest() throws ApiException {
        Integer itemLowstockCodeId = null;
        api.getItemLowstockCodeTags(itemLowstockCodeId);

        // TODO: test validations
    }
    
    /**
     * Update an itemLowstockCode
     *
     * Updates an existing itemLowstockCode using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateItemLowstockCodeTest() throws ApiException {
        ItemLowstockCode body = null;
        api.updateItemLowstockCode(body);

        // TODO: test validations
    }
    
}

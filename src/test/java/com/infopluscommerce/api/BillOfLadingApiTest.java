/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.BillOfLading;
import com.infopluscommerce.model.ModelApiResponse;
import com.infopluscommerce.model.RecordFile;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BillOfLadingApi
 */
@Ignore
public class BillOfLadingApiTest {

    private final BillOfLadingApi api = new BillOfLadingApi();

    
    /**
     * Create a billOfLading
     *
     * Inserts a new billOfLading using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addBillOfLadingTest() throws ApiException {
        BillOfLading body = null;
        BillOfLading response = api.addBillOfLading(body);

        // TODO: test validations
    }
    
    /**
     * Add new audit for a billOfLading
     *
     * Adds an audit to an existing billOfLading.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addBillOfLadingAuditTest() throws ApiException {
        Integer billOfLadingId = null;
        String billOfLadingAudit = null;
        api.addBillOfLadingAudit(billOfLadingId, billOfLadingAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a billOfLading
     *
     * Adds a file to an existing billOfLading.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addBillOfLadingFileTest() throws ApiException {
        Integer billOfLadingId = null;
        String fileName = null;
        api.addBillOfLadingFile(billOfLadingId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a billOfLading by URL.
     *
     * Adds a file to an existing billOfLading by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addBillOfLadingFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer billOfLadingId = null;
        api.addBillOfLadingFileByURL(body, billOfLadingId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for a billOfLading.
     *
     * Adds a tag to an existing billOfLading.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addBillOfLadingTagTest() throws ApiException {
        Integer billOfLadingId = null;
        String billOfLadingTag = null;
        api.addBillOfLadingTag(billOfLadingId, billOfLadingTag);

        // TODO: test validations
    }
    
    /**
     * Delete a billOfLading
     *
     * Deletes the billOfLading identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteBillOfLadingTest() throws ApiException {
        Integer billOfLadingId = null;
        api.deleteBillOfLading(billOfLadingId);

        // TODO: test validations
    }
    
    /**
     * Delete a file for a billOfLading.
     *
     * Deletes an existing billOfLading file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteBillOfLadingFileTest() throws ApiException {
        Integer billOfLadingId = null;
        Integer fileId = null;
        api.deleteBillOfLadingFile(billOfLadingId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for a billOfLading.
     *
     * Deletes an existing billOfLading tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteBillOfLadingTagTest() throws ApiException {
        Integer billOfLadingId = null;
        String billOfLadingTag = null;
        api.deleteBillOfLadingTag(billOfLadingId, billOfLadingTag);

        // TODO: test validations
    }
    
    /**
     * Search billOfLadings by filter
     *
     * Returns the list of billOfLadings that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBillOfLadingByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<BillOfLading> response = api.getBillOfLadingByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get a billOfLading by id
     *
     * Returns the billOfLading identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBillOfLadingByIdTest() throws ApiException {
        Integer billOfLadingId = null;
        BillOfLading response = api.getBillOfLadingById(billOfLadingId);

        // TODO: test validations
    }
    
    /**
     * Get the files for a billOfLading.
     *
     * Get all existing billOfLading files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBillOfLadingFilesTest() throws ApiException {
        Integer billOfLadingId = null;
        api.getBillOfLadingFiles(billOfLadingId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for a billOfLading.
     *
     * Get all existing billOfLading tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBillOfLadingTagsTest() throws ApiException {
        Integer billOfLadingId = null;
        api.getBillOfLadingTags(billOfLadingId);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated a billOfLading by id
     *
     * Returns a duplicated billOfLading identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateBillOfLadingByIdTest() throws ApiException {
        Integer billOfLadingId = null;
        BillOfLading response = api.getDuplicateBillOfLadingById(billOfLadingId);

        // TODO: test validations
    }
    
    /**
     * Update a billOfLading
     *
     * Updates an existing billOfLading using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateBillOfLadingTest() throws ApiException {
        BillOfLading body = null;
        api.updateBillOfLading(body);

        // TODO: test validations
    }
    
    /**
     * Update a billOfLading custom fields
     *
     * Updates an existing billOfLading custom fields using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateBillOfLadingCustomFieldsTest() throws ApiException {
        BillOfLading body = null;
        api.updateBillOfLadingCustomFields(body);

        // TODO: test validations
    }
    
}

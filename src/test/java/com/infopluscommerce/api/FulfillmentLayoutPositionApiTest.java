/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.FulfillmentLayoutPosition;
import com.infopluscommerce.model.RecordFile;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FulfillmentLayoutPositionApi
 */
@Ignore
public class FulfillmentLayoutPositionApiTest {

    private final FulfillmentLayoutPositionApi api = new FulfillmentLayoutPositionApi();

    
    /**
     * Add new audit for a fulfillmentLayoutPosition
     *
     * Adds an audit to an existing fulfillmentLayoutPosition.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addFulfillmentLayoutPositionAuditTest() throws ApiException {
        Integer fulfillmentLayoutPositionId = null;
        String fulfillmentLayoutPositionAudit = null;
        api.addFulfillmentLayoutPositionAudit(fulfillmentLayoutPositionId, fulfillmentLayoutPositionAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a fulfillmentLayoutPosition
     *
     * Adds a file to an existing fulfillmentLayoutPosition.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addFulfillmentLayoutPositionFileTest() throws ApiException {
        Integer fulfillmentLayoutPositionId = null;
        String fileName = null;
        api.addFulfillmentLayoutPositionFile(fulfillmentLayoutPositionId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a fulfillmentLayoutPosition by URL.
     *
     * Adds a file to an existing fulfillmentLayoutPosition by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addFulfillmentLayoutPositionFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer fulfillmentLayoutPositionId = null;
        api.addFulfillmentLayoutPositionFileByURL(body, fulfillmentLayoutPositionId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for a fulfillmentLayoutPosition.
     *
     * Adds a tag to an existing fulfillmentLayoutPosition.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addFulfillmentLayoutPositionTagTest() throws ApiException {
        Integer fulfillmentLayoutPositionId = null;
        String fulfillmentLayoutPositionTag = null;
        api.addFulfillmentLayoutPositionTag(fulfillmentLayoutPositionId, fulfillmentLayoutPositionTag);

        // TODO: test validations
    }
    
    /**
     * Delete a file for a fulfillmentLayoutPosition.
     *
     * Deletes an existing fulfillmentLayoutPosition file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteFulfillmentLayoutPositionFileTest() throws ApiException {
        Integer fulfillmentLayoutPositionId = null;
        Integer fileId = null;
        api.deleteFulfillmentLayoutPositionFile(fulfillmentLayoutPositionId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for a fulfillmentLayoutPosition.
     *
     * Deletes an existing fulfillmentLayoutPosition tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteFulfillmentLayoutPositionTagTest() throws ApiException {
        Integer fulfillmentLayoutPositionId = null;
        String fulfillmentLayoutPositionTag = null;
        api.deleteFulfillmentLayoutPositionTag(fulfillmentLayoutPositionId, fulfillmentLayoutPositionTag);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated a fulfillmentLayoutPosition by id
     *
     * Returns a duplicated fulfillmentLayoutPosition identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateFulfillmentLayoutPositionByIdTest() throws ApiException {
        Integer fulfillmentLayoutPositionId = null;
        FulfillmentLayoutPosition response = api.getDuplicateFulfillmentLayoutPositionById(fulfillmentLayoutPositionId);

        // TODO: test validations
    }
    
    /**
     * Search fulfillmentLayoutPositions by filter
     *
     * Returns the list of fulfillmentLayoutPositions that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFulfillmentLayoutPositionByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<FulfillmentLayoutPosition> response = api.getFulfillmentLayoutPositionByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get a fulfillmentLayoutPosition by id
     *
     * Returns the fulfillmentLayoutPosition identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFulfillmentLayoutPositionByIdTest() throws ApiException {
        Integer fulfillmentLayoutPositionId = null;
        FulfillmentLayoutPosition response = api.getFulfillmentLayoutPositionById(fulfillmentLayoutPositionId);

        // TODO: test validations
    }
    
    /**
     * Get the files for a fulfillmentLayoutPosition.
     *
     * Get all existing fulfillmentLayoutPosition files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFulfillmentLayoutPositionFilesTest() throws ApiException {
        Integer fulfillmentLayoutPositionId = null;
        api.getFulfillmentLayoutPositionFiles(fulfillmentLayoutPositionId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for a fulfillmentLayoutPosition.
     *
     * Get all existing fulfillmentLayoutPosition tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFulfillmentLayoutPositionTagsTest() throws ApiException {
        Integer fulfillmentLayoutPositionId = null;
        api.getFulfillmentLayoutPositionTags(fulfillmentLayoutPositionId);

        // TODO: test validations
    }
    
}

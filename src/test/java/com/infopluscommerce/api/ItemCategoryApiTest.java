/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.ItemCategory;
import com.infopluscommerce.model.ModelApiResponse;
import com.infopluscommerce.model.RecordFile;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ItemCategoryApi
 */
@Ignore
public class ItemCategoryApiTest {

    private final ItemCategoryApi api = new ItemCategoryApi();

    
    /**
     * Create an itemCategory
     *
     * Inserts a new itemCategory using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addItemCategoryTest() throws ApiException {
        ItemCategory body = null;
        ItemCategory response = api.addItemCategory(body);

        // TODO: test validations
    }
    
    /**
     * Add new audit for an itemCategory
     *
     * Adds an audit to an existing itemCategory.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addItemCategoryAuditTest() throws ApiException {
        Integer itemCategoryId = null;
        String itemCategoryAudit = null;
        api.addItemCategoryAudit(itemCategoryId, itemCategoryAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to an itemCategory
     *
     * Adds a file to an existing itemCategory.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addItemCategoryFileTest() throws ApiException {
        Integer itemCategoryId = null;
        String fileName = null;
        api.addItemCategoryFile(itemCategoryId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to an itemCategory by URL.
     *
     * Adds a file to an existing itemCategory by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addItemCategoryFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer itemCategoryId = null;
        api.addItemCategoryFileByURL(body, itemCategoryId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for an itemCategory.
     *
     * Adds a tag to an existing itemCategory.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addItemCategoryTagTest() throws ApiException {
        Integer itemCategoryId = null;
        String itemCategoryTag = null;
        api.addItemCategoryTag(itemCategoryId, itemCategoryTag);

        // TODO: test validations
    }
    
    /**
     * Delete an itemCategory
     *
     * Deletes the itemCategory identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteItemCategoryTest() throws ApiException {
        Integer itemCategoryId = null;
        api.deleteItemCategory(itemCategoryId);

        // TODO: test validations
    }
    
    /**
     * Delete a file for an itemCategory.
     *
     * Deletes an existing itemCategory file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteItemCategoryFileTest() throws ApiException {
        Integer itemCategoryId = null;
        Integer fileId = null;
        api.deleteItemCategoryFile(itemCategoryId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for an itemCategory.
     *
     * Deletes an existing itemCategory tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteItemCategoryTagTest() throws ApiException {
        Integer itemCategoryId = null;
        String itemCategoryTag = null;
        api.deleteItemCategoryTag(itemCategoryId, itemCategoryTag);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated an itemCategory by id
     *
     * Returns a duplicated itemCategory identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateItemCategoryByIdTest() throws ApiException {
        Integer itemCategoryId = null;
        ItemCategory response = api.getDuplicateItemCategoryById(itemCategoryId);

        // TODO: test validations
    }
    
    /**
     * Search itemCategorys by filter
     *
     * Returns the list of itemCategorys that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getItemCategoryByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<ItemCategory> response = api.getItemCategoryByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get an itemCategory by id
     *
     * Returns the itemCategory identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getItemCategoryByIdTest() throws ApiException {
        Integer itemCategoryId = null;
        ItemCategory response = api.getItemCategoryById(itemCategoryId);

        // TODO: test validations
    }
    
    /**
     * Get the files for an itemCategory.
     *
     * Get all existing itemCategory files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getItemCategoryFilesTest() throws ApiException {
        Integer itemCategoryId = null;
        api.getItemCategoryFiles(itemCategoryId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for an itemCategory.
     *
     * Get all existing itemCategory tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getItemCategoryTagsTest() throws ApiException {
        Integer itemCategoryId = null;
        api.getItemCategoryTags(itemCategoryId);

        // TODO: test validations
    }
    
    /**
     * Update an itemCategory
     *
     * Updates an existing itemCategory using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateItemCategoryTest() throws ApiException {
        ItemCategory body = null;
        api.updateItemCategory(body);

        // TODO: test validations
    }
    
}

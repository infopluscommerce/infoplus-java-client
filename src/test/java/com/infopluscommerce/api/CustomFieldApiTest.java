/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.CustomField;
import com.infopluscommerce.model.ModelApiResponse;
import com.infopluscommerce.model.RecordFile;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomFieldApi
 */
@Ignore
public class CustomFieldApiTest {

    private final CustomFieldApi api = new CustomFieldApi();

    
    /**
     * Create a customField
     *
     * Inserts a new customField using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCustomFieldTest() throws ApiException {
        CustomField body = null;
        CustomField response = api.addCustomField(body);

        // TODO: test validations
    }
    
    /**
     * Add new audit for a customField
     *
     * Adds an audit to an existing customField.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCustomFieldAuditTest() throws ApiException {
        Integer customFieldId = null;
        String customFieldAudit = null;
        api.addCustomFieldAudit(customFieldId, customFieldAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a customField
     *
     * Adds a file to an existing customField.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCustomFieldFileTest() throws ApiException {
        Integer customFieldId = null;
        String fileName = null;
        api.addCustomFieldFile(customFieldId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a customField by URL.
     *
     * Adds a file to an existing customField by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCustomFieldFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer customFieldId = null;
        api.addCustomFieldFileByURL(body, customFieldId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for a customField.
     *
     * Adds a tag to an existing customField.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCustomFieldTagTest() throws ApiException {
        Integer customFieldId = null;
        String customFieldTag = null;
        api.addCustomFieldTag(customFieldId, customFieldTag);

        // TODO: test validations
    }
    
    /**
     * Delete a file for a customField.
     *
     * Deletes an existing customField file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCustomFieldFileTest() throws ApiException {
        Integer customFieldId = null;
        Integer fileId = null;
        api.deleteCustomFieldFile(customFieldId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for a customField.
     *
     * Deletes an existing customField tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCustomFieldTagTest() throws ApiException {
        Integer customFieldId = null;
        String customFieldTag = null;
        api.deleteCustomFieldTag(customFieldId, customFieldTag);

        // TODO: test validations
    }
    
    /**
     * Search customFields by filter
     *
     * Returns the list of customFields that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomFieldByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<CustomField> response = api.getCustomFieldByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get a customField by id
     *
     * Returns the customField identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomFieldByIdTest() throws ApiException {
        Integer customFieldId = null;
        CustomField response = api.getCustomFieldById(customFieldId);

        // TODO: test validations
    }
    
    /**
     * Get the files for a customField.
     *
     * Get all existing customField files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomFieldFilesTest() throws ApiException {
        Integer customFieldId = null;
        api.getCustomFieldFiles(customFieldId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for a customField.
     *
     * Get all existing customField tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomFieldTagsTest() throws ApiException {
        Integer customFieldId = null;
        api.getCustomFieldTags(customFieldId);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated a customField by id
     *
     * Returns a duplicated customField identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateCustomFieldByIdTest() throws ApiException {
        Integer customFieldId = null;
        CustomField response = api.getDuplicateCustomFieldById(customFieldId);

        // TODO: test validations
    }
    
    /**
     * Update a customField
     *
     * Updates an existing customField using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCustomFieldTest() throws ApiException {
        CustomField body = null;
        api.updateCustomField(body);

        // TODO: test validations
    }
    
}

/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.LegacyLowstockContact;
import com.infopluscommerce.model.ModelApiResponse;
import com.infopluscommerce.model.RecordFile;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LegacyLowstockContactApi
 */
@Ignore
public class LegacyLowstockContactApiTest {

    private final LegacyLowstockContactApi api = new LegacyLowstockContactApi();

    
    /**
     * Create a legacyLowstockContact
     *
     * Inserts a new legacyLowstockContact using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addLegacyLowstockContactTest() throws ApiException {
        LegacyLowstockContact body = null;
        LegacyLowstockContact response = api.addLegacyLowstockContact(body);

        // TODO: test validations
    }
    
    /**
     * Add new audit for a legacyLowstockContact
     *
     * Adds an audit to an existing legacyLowstockContact.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addLegacyLowstockContactAuditTest() throws ApiException {
        Integer legacyLowstockContactId = null;
        String legacyLowstockContactAudit = null;
        api.addLegacyLowstockContactAudit(legacyLowstockContactId, legacyLowstockContactAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a legacyLowstockContact
     *
     * Adds a file to an existing legacyLowstockContact.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addLegacyLowstockContactFileTest() throws ApiException {
        Integer legacyLowstockContactId = null;
        String fileName = null;
        api.addLegacyLowstockContactFile(legacyLowstockContactId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a legacyLowstockContact by URL.
     *
     * Adds a file to an existing legacyLowstockContact by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addLegacyLowstockContactFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer legacyLowstockContactId = null;
        api.addLegacyLowstockContactFileByURL(body, legacyLowstockContactId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for a legacyLowstockContact.
     *
     * Adds a tag to an existing legacyLowstockContact.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addLegacyLowstockContactTagTest() throws ApiException {
        Integer legacyLowstockContactId = null;
        String legacyLowstockContactTag = null;
        api.addLegacyLowstockContactTag(legacyLowstockContactId, legacyLowstockContactTag);

        // TODO: test validations
    }
    
    /**
     * Delete a legacyLowstockContact
     *
     * Deletes the legacyLowstockContact identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteLegacyLowstockContactTest() throws ApiException {
        Integer legacyLowstockContactId = null;
        api.deleteLegacyLowstockContact(legacyLowstockContactId);

        // TODO: test validations
    }
    
    /**
     * Delete a file for a legacyLowstockContact.
     *
     * Deletes an existing legacyLowstockContact file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteLegacyLowstockContactFileTest() throws ApiException {
        Integer legacyLowstockContactId = null;
        Integer fileId = null;
        api.deleteLegacyLowstockContactFile(legacyLowstockContactId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for a legacyLowstockContact.
     *
     * Deletes an existing legacyLowstockContact tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteLegacyLowstockContactTagTest() throws ApiException {
        Integer legacyLowstockContactId = null;
        String legacyLowstockContactTag = null;
        api.deleteLegacyLowstockContactTag(legacyLowstockContactId, legacyLowstockContactTag);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated a legacyLowstockContact by id
     *
     * Returns a duplicated legacyLowstockContact identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateLegacyLowstockContactByIdTest() throws ApiException {
        Integer legacyLowstockContactId = null;
        LegacyLowstockContact response = api.getDuplicateLegacyLowstockContactById(legacyLowstockContactId);

        // TODO: test validations
    }
    
    /**
     * Search legacyLowstockContacts by filter
     *
     * Returns the list of legacyLowstockContacts that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLegacyLowstockContactByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<LegacyLowstockContact> response = api.getLegacyLowstockContactByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get a legacyLowstockContact by id
     *
     * Returns the legacyLowstockContact identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLegacyLowstockContactByIdTest() throws ApiException {
        Integer legacyLowstockContactId = null;
        LegacyLowstockContact response = api.getLegacyLowstockContactById(legacyLowstockContactId);

        // TODO: test validations
    }
    
    /**
     * Get the files for a legacyLowstockContact.
     *
     * Get all existing legacyLowstockContact files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLegacyLowstockContactFilesTest() throws ApiException {
        Integer legacyLowstockContactId = null;
        api.getLegacyLowstockContactFiles(legacyLowstockContactId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for a legacyLowstockContact.
     *
     * Get all existing legacyLowstockContact tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLegacyLowstockContactTagsTest() throws ApiException {
        Integer legacyLowstockContactId = null;
        api.getLegacyLowstockContactTags(legacyLowstockContactId);

        // TODO: test validations
    }
    
    /**
     * Update a legacyLowstockContact
     *
     * Updates an existing legacyLowstockContact using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateLegacyLowstockContactTest() throws ApiException {
        LegacyLowstockContact body = null;
        api.updateLegacyLowstockContact(body);

        // TODO: test validations
    }
    
}

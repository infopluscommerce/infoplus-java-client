/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.CustomerInvoiceTemplate;
import com.infopluscommerce.model.ModelApiResponse;
import com.infopluscommerce.model.RecordFile;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomerInvoiceTemplateApi
 */
@Ignore
public class CustomerInvoiceTemplateApiTest {

    private final CustomerInvoiceTemplateApi api = new CustomerInvoiceTemplateApi();

    
    /**
     * Create a customerInvoiceTemplate
     *
     * Inserts a new customerInvoiceTemplate using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCustomerInvoiceTemplateTest() throws ApiException {
        CustomerInvoiceTemplate body = null;
        CustomerInvoiceTemplate response = api.addCustomerInvoiceTemplate(body);

        // TODO: test validations
    }
    
    /**
     * Add new audit for a customerInvoiceTemplate
     *
     * Adds an audit to an existing customerInvoiceTemplate.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCustomerInvoiceTemplateAuditTest() throws ApiException {
        Integer customerInvoiceTemplateId = null;
        String customerInvoiceTemplateAudit = null;
        api.addCustomerInvoiceTemplateAudit(customerInvoiceTemplateId, customerInvoiceTemplateAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a customerInvoiceTemplate
     *
     * Adds a file to an existing customerInvoiceTemplate.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCustomerInvoiceTemplateFileTest() throws ApiException {
        Integer customerInvoiceTemplateId = null;
        String fileName = null;
        api.addCustomerInvoiceTemplateFile(customerInvoiceTemplateId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a customerInvoiceTemplate by URL.
     *
     * Adds a file to an existing customerInvoiceTemplate by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCustomerInvoiceTemplateFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer customerInvoiceTemplateId = null;
        api.addCustomerInvoiceTemplateFileByURL(body, customerInvoiceTemplateId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for a customerInvoiceTemplate.
     *
     * Adds a tag to an existing customerInvoiceTemplate.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCustomerInvoiceTemplateTagTest() throws ApiException {
        Integer customerInvoiceTemplateId = null;
        String customerInvoiceTemplateTag = null;
        api.addCustomerInvoiceTemplateTag(customerInvoiceTemplateId, customerInvoiceTemplateTag);

        // TODO: test validations
    }
    
    /**
     * Delete a customerInvoiceTemplate
     *
     * Deletes the customerInvoiceTemplate identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCustomerInvoiceTemplateTest() throws ApiException {
        Integer customerInvoiceTemplateId = null;
        api.deleteCustomerInvoiceTemplate(customerInvoiceTemplateId);

        // TODO: test validations
    }
    
    /**
     * Delete a file for a customerInvoiceTemplate.
     *
     * Deletes an existing customerInvoiceTemplate file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCustomerInvoiceTemplateFileTest() throws ApiException {
        Integer customerInvoiceTemplateId = null;
        Integer fileId = null;
        api.deleteCustomerInvoiceTemplateFile(customerInvoiceTemplateId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for a customerInvoiceTemplate.
     *
     * Deletes an existing customerInvoiceTemplate tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCustomerInvoiceTemplateTagTest() throws ApiException {
        Integer customerInvoiceTemplateId = null;
        String customerInvoiceTemplateTag = null;
        api.deleteCustomerInvoiceTemplateTag(customerInvoiceTemplateId, customerInvoiceTemplateTag);

        // TODO: test validations
    }
    
    /**
     * Search customerInvoiceTemplates by filter
     *
     * Returns the list of customerInvoiceTemplates that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomerInvoiceTemplateByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<CustomerInvoiceTemplate> response = api.getCustomerInvoiceTemplateByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get a customerInvoiceTemplate by id
     *
     * Returns the customerInvoiceTemplate identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomerInvoiceTemplateByIdTest() throws ApiException {
        Integer customerInvoiceTemplateId = null;
        CustomerInvoiceTemplate response = api.getCustomerInvoiceTemplateById(customerInvoiceTemplateId);

        // TODO: test validations
    }
    
    /**
     * Get the files for a customerInvoiceTemplate.
     *
     * Get all existing customerInvoiceTemplate files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomerInvoiceTemplateFilesTest() throws ApiException {
        Integer customerInvoiceTemplateId = null;
        api.getCustomerInvoiceTemplateFiles(customerInvoiceTemplateId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for a customerInvoiceTemplate.
     *
     * Get all existing customerInvoiceTemplate tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomerInvoiceTemplateTagsTest() throws ApiException {
        Integer customerInvoiceTemplateId = null;
        api.getCustomerInvoiceTemplateTags(customerInvoiceTemplateId);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated a customerInvoiceTemplate by id
     *
     * Returns a duplicated customerInvoiceTemplate identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateCustomerInvoiceTemplateByIdTest() throws ApiException {
        Integer customerInvoiceTemplateId = null;
        CustomerInvoiceTemplate response = api.getDuplicateCustomerInvoiceTemplateById(customerInvoiceTemplateId);

        // TODO: test validations
    }
    
    /**
     * Update a customerInvoiceTemplate
     *
     * Updates an existing customerInvoiceTemplate using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCustomerInvoiceTemplateTest() throws ApiException {
        CustomerInvoiceTemplate body = null;
        api.updateCustomerInvoiceTemplate(body);

        // TODO: test validations
    }
    
}

/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.RecordFile;
import com.infopluscommerce.model.ScheduledPlanLog;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ScheduledPlanLogApi
 */
@Ignore
public class ScheduledPlanLogApiTest {

    private final ScheduledPlanLogApi api = new ScheduledPlanLogApi();

    
    /**
     * Add new audit for a scheduledPlanLog
     *
     * Adds an audit to an existing scheduledPlanLog.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addScheduledPlanLogAuditTest() throws ApiException {
        Integer scheduledPlanLogId = null;
        String scheduledPlanLogAudit = null;
        api.addScheduledPlanLogAudit(scheduledPlanLogId, scheduledPlanLogAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a scheduledPlanLog
     *
     * Adds a file to an existing scheduledPlanLog.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addScheduledPlanLogFileTest() throws ApiException {
        Integer scheduledPlanLogId = null;
        String fileName = null;
        api.addScheduledPlanLogFile(scheduledPlanLogId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a scheduledPlanLog by URL.
     *
     * Adds a file to an existing scheduledPlanLog by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addScheduledPlanLogFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer scheduledPlanLogId = null;
        api.addScheduledPlanLogFileByURL(body, scheduledPlanLogId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for a scheduledPlanLog.
     *
     * Adds a tag to an existing scheduledPlanLog.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addScheduledPlanLogTagTest() throws ApiException {
        Integer scheduledPlanLogId = null;
        String scheduledPlanLogTag = null;
        api.addScheduledPlanLogTag(scheduledPlanLogId, scheduledPlanLogTag);

        // TODO: test validations
    }
    
    /**
     * Delete a file for a scheduledPlanLog.
     *
     * Deletes an existing scheduledPlanLog file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteScheduledPlanLogFileTest() throws ApiException {
        Integer scheduledPlanLogId = null;
        Integer fileId = null;
        api.deleteScheduledPlanLogFile(scheduledPlanLogId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for a scheduledPlanLog.
     *
     * Deletes an existing scheduledPlanLog tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteScheduledPlanLogTagTest() throws ApiException {
        Integer scheduledPlanLogId = null;
        String scheduledPlanLogTag = null;
        api.deleteScheduledPlanLogTag(scheduledPlanLogId, scheduledPlanLogTag);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated a scheduledPlanLog by id
     *
     * Returns a duplicated scheduledPlanLog identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateScheduledPlanLogByIdTest() throws ApiException {
        Integer scheduledPlanLogId = null;
        ScheduledPlanLog response = api.getDuplicateScheduledPlanLogById(scheduledPlanLogId);

        // TODO: test validations
    }
    
    /**
     * Search scheduledPlanLogs by filter
     *
     * Returns the list of scheduledPlanLogs that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getScheduledPlanLogByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<ScheduledPlanLog> response = api.getScheduledPlanLogByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get a scheduledPlanLog by id
     *
     * Returns the scheduledPlanLog identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getScheduledPlanLogByIdTest() throws ApiException {
        Integer scheduledPlanLogId = null;
        ScheduledPlanLog response = api.getScheduledPlanLogById(scheduledPlanLogId);

        // TODO: test validations
    }
    
    /**
     * Get the files for a scheduledPlanLog.
     *
     * Get all existing scheduledPlanLog files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getScheduledPlanLogFilesTest() throws ApiException {
        Integer scheduledPlanLogId = null;
        api.getScheduledPlanLogFiles(scheduledPlanLogId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for a scheduledPlanLog.
     *
     * Get all existing scheduledPlanLog tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getScheduledPlanLogTagsTest() throws ApiException {
        Integer scheduledPlanLogId = null;
        api.getScheduledPlanLogTags(scheduledPlanLogId);

        // TODO: test validations
    }
    
}

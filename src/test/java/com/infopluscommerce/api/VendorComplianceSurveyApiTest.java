/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.ModelApiResponse;
import com.infopluscommerce.model.RecordFile;
import com.infopluscommerce.model.VendorComplianceSurvey;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VendorComplianceSurveyApi
 */
@Ignore
public class VendorComplianceSurveyApiTest {

    private final VendorComplianceSurveyApi api = new VendorComplianceSurveyApi();

    
    /**
     * Create a vendorComplianceSurvey
     *
     * Inserts a new vendorComplianceSurvey using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addVendorComplianceSurveyTest() throws ApiException {
        VendorComplianceSurvey body = null;
        VendorComplianceSurvey response = api.addVendorComplianceSurvey(body);

        // TODO: test validations
    }
    
    /**
     * Add new audit for a vendorComplianceSurvey
     *
     * Adds an audit to an existing vendorComplianceSurvey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addVendorComplianceSurveyAuditTest() throws ApiException {
        Integer vendorComplianceSurveyId = null;
        String vendorComplianceSurveyAudit = null;
        api.addVendorComplianceSurveyAudit(vendorComplianceSurveyId, vendorComplianceSurveyAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a vendorComplianceSurvey
     *
     * Adds a file to an existing vendorComplianceSurvey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addVendorComplianceSurveyFileTest() throws ApiException {
        Integer vendorComplianceSurveyId = null;
        String fileName = null;
        api.addVendorComplianceSurveyFile(vendorComplianceSurveyId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a vendorComplianceSurvey by URL.
     *
     * Adds a file to an existing vendorComplianceSurvey by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addVendorComplianceSurveyFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer vendorComplianceSurveyId = null;
        api.addVendorComplianceSurveyFileByURL(body, vendorComplianceSurveyId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for a vendorComplianceSurvey.
     *
     * Adds a tag to an existing vendorComplianceSurvey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addVendorComplianceSurveyTagTest() throws ApiException {
        Integer vendorComplianceSurveyId = null;
        String vendorComplianceSurveyTag = null;
        api.addVendorComplianceSurveyTag(vendorComplianceSurveyId, vendorComplianceSurveyTag);

        // TODO: test validations
    }
    
    /**
     * Delete a vendorComplianceSurvey
     *
     * Deletes the vendorComplianceSurvey identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteVendorComplianceSurveyTest() throws ApiException {
        Integer vendorComplianceSurveyId = null;
        api.deleteVendorComplianceSurvey(vendorComplianceSurveyId);

        // TODO: test validations
    }
    
    /**
     * Delete a file for a vendorComplianceSurvey.
     *
     * Deletes an existing vendorComplianceSurvey file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteVendorComplianceSurveyFileTest() throws ApiException {
        Integer vendorComplianceSurveyId = null;
        Integer fileId = null;
        api.deleteVendorComplianceSurveyFile(vendorComplianceSurveyId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for a vendorComplianceSurvey.
     *
     * Deletes an existing vendorComplianceSurvey tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteVendorComplianceSurveyTagTest() throws ApiException {
        Integer vendorComplianceSurveyId = null;
        String vendorComplianceSurveyTag = null;
        api.deleteVendorComplianceSurveyTag(vendorComplianceSurveyId, vendorComplianceSurveyTag);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated a vendorComplianceSurvey by id
     *
     * Returns a duplicated vendorComplianceSurvey identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateVendorComplianceSurveyByIdTest() throws ApiException {
        Integer vendorComplianceSurveyId = null;
        VendorComplianceSurvey response = api.getDuplicateVendorComplianceSurveyById(vendorComplianceSurveyId);

        // TODO: test validations
    }
    
    /**
     * Search vendorComplianceSurveys by filter
     *
     * Returns the list of vendorComplianceSurveys that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVendorComplianceSurveyByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<VendorComplianceSurvey> response = api.getVendorComplianceSurveyByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get a vendorComplianceSurvey by id
     *
     * Returns the vendorComplianceSurvey identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVendorComplianceSurveyByIdTest() throws ApiException {
        Integer vendorComplianceSurveyId = null;
        VendorComplianceSurvey response = api.getVendorComplianceSurveyById(vendorComplianceSurveyId);

        // TODO: test validations
    }
    
    /**
     * Get the files for a vendorComplianceSurvey.
     *
     * Get all existing vendorComplianceSurvey files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVendorComplianceSurveyFilesTest() throws ApiException {
        Integer vendorComplianceSurveyId = null;
        api.getVendorComplianceSurveyFiles(vendorComplianceSurveyId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for a vendorComplianceSurvey.
     *
     * Get all existing vendorComplianceSurvey tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVendorComplianceSurveyTagsTest() throws ApiException {
        Integer vendorComplianceSurveyId = null;
        api.getVendorComplianceSurveyTags(vendorComplianceSurveyId);

        // TODO: test validations
    }
    
    /**
     * Update a vendorComplianceSurvey
     *
     * Updates an existing vendorComplianceSurvey using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateVendorComplianceSurveyTest() throws ApiException {
        VendorComplianceSurvey body = null;
        api.updateVendorComplianceSurvey(body);

        // TODO: test validations
    }
    
    /**
     * Update a vendorComplianceSurvey custom fields
     *
     * Updates an existing vendorComplianceSurvey custom fields using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateVendorComplianceSurveyCustomFieldsTest() throws ApiException {
        VendorComplianceSurvey body = null;
        api.updateVendorComplianceSurveyCustomFields(body);

        // TODO: test validations
    }
    
}

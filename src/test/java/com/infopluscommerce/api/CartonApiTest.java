/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.Carton;
import com.infopluscommerce.model.ModelApiResponse;
import com.infopluscommerce.model.RecordFile;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CartonApi
 */
@Ignore
public class CartonApiTest {

    private final CartonApi api = new CartonApi();

    
    /**
     * Create a carton
     *
     * Inserts a new carton using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCartonTest() throws ApiException {
        Carton body = null;
        Carton response = api.addCarton(body);

        // TODO: test validations
    }
    
    /**
     * Add new audit for a carton
     *
     * Adds an audit to an existing carton.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCartonAuditTest() throws ApiException {
        Integer cartonId = null;
        String cartonAudit = null;
        api.addCartonAudit(cartonId, cartonAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a carton
     *
     * Adds a file to an existing carton.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCartonFileTest() throws ApiException {
        Integer cartonId = null;
        String fileName = null;
        api.addCartonFile(cartonId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a carton by URL.
     *
     * Adds a file to an existing carton by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCartonFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer cartonId = null;
        api.addCartonFileByURL(body, cartonId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for a carton.
     *
     * Adds a tag to an existing carton.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCartonTagTest() throws ApiException {
        Integer cartonId = null;
        String cartonTag = null;
        api.addCartonTag(cartonId, cartonTag);

        // TODO: test validations
    }
    
    /**
     * Delete a carton
     *
     * Deletes the carton identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCartonTest() throws ApiException {
        Integer cartonId = null;
        api.deleteCarton(cartonId);

        // TODO: test validations
    }
    
    /**
     * Delete a file for a carton.
     *
     * Deletes an existing carton file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCartonFileTest() throws ApiException {
        Integer cartonId = null;
        Integer fileId = null;
        api.deleteCartonFile(cartonId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for a carton.
     *
     * Deletes an existing carton tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCartonTagTest() throws ApiException {
        Integer cartonId = null;
        String cartonTag = null;
        api.deleteCartonTag(cartonId, cartonTag);

        // TODO: test validations
    }
    
    /**
     * Search cartons by filter
     *
     * Returns the list of cartons that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCartonByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<Carton> response = api.getCartonByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get a carton by id
     *
     * Returns the carton identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCartonByIdTest() throws ApiException {
        Integer cartonId = null;
        Carton response = api.getCartonById(cartonId);

        // TODO: test validations
    }
    
    /**
     * Get the files for a carton.
     *
     * Get all existing carton files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCartonFilesTest() throws ApiException {
        Integer cartonId = null;
        api.getCartonFiles(cartonId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for a carton.
     *
     * Get all existing carton tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCartonTagsTest() throws ApiException {
        Integer cartonId = null;
        api.getCartonTags(cartonId);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated a carton by id
     *
     * Returns a duplicated carton identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateCartonByIdTest() throws ApiException {
        Integer cartonId = null;
        Carton response = api.getDuplicateCartonById(cartonId);

        // TODO: test validations
    }
    
    /**
     * Update a carton
     *
     * Updates an existing carton using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCartonTest() throws ApiException {
        Carton body = null;
        api.updateCarton(body);

        // TODO: test validations
    }
    
    /**
     * Update a carton custom fields
     *
     * Updates an existing carton custom fields using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCartonCustomFieldsTest() throws ApiException {
        Carton body = null;
        api.updateCartonCustomFields(body);

        // TODO: test validations
    }
    
}

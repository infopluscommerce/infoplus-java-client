/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.ModelApiResponse;
import com.infopluscommerce.model.ReceivingWorksheet;
import com.infopluscommerce.model.RecordFile;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReceivingWorksheetApi
 */
@Ignore
public class ReceivingWorksheetApiTest {

    private final ReceivingWorksheetApi api = new ReceivingWorksheetApi();

    
    /**
     * Create a receivingWorksheet
     *
     * Inserts a new receivingWorksheet using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addReceivingWorksheetTest() throws ApiException {
        ReceivingWorksheet body = null;
        ReceivingWorksheet response = api.addReceivingWorksheet(body);

        // TODO: test validations
    }
    
    /**
     * Add new audit for a receivingWorksheet
     *
     * Adds an audit to an existing receivingWorksheet.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addReceivingWorksheetAuditTest() throws ApiException {
        Integer receivingWorksheetId = null;
        String receivingWorksheetAudit = null;
        api.addReceivingWorksheetAudit(receivingWorksheetId, receivingWorksheetAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a receivingWorksheet
     *
     * Adds a file to an existing receivingWorksheet.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addReceivingWorksheetFileTest() throws ApiException {
        Integer receivingWorksheetId = null;
        String fileName = null;
        api.addReceivingWorksheetFile(receivingWorksheetId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a receivingWorksheet by URL.
     *
     * Adds a file to an existing receivingWorksheet by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addReceivingWorksheetFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer receivingWorksheetId = null;
        api.addReceivingWorksheetFileByURL(body, receivingWorksheetId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for a receivingWorksheet.
     *
     * Adds a tag to an existing receivingWorksheet.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addReceivingWorksheetTagTest() throws ApiException {
        Integer receivingWorksheetId = null;
        String receivingWorksheetTag = null;
        api.addReceivingWorksheetTag(receivingWorksheetId, receivingWorksheetTag);

        // TODO: test validations
    }
    
    /**
     * Delete a receivingWorksheet
     *
     * Deletes the receivingWorksheet identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteReceivingWorksheetTest() throws ApiException {
        Integer receivingWorksheetId = null;
        api.deleteReceivingWorksheet(receivingWorksheetId);

        // TODO: test validations
    }
    
    /**
     * Delete a file for a receivingWorksheet.
     *
     * Deletes an existing receivingWorksheet file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteReceivingWorksheetFileTest() throws ApiException {
        Integer receivingWorksheetId = null;
        Integer fileId = null;
        api.deleteReceivingWorksheetFile(receivingWorksheetId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for a receivingWorksheet.
     *
     * Deletes an existing receivingWorksheet tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteReceivingWorksheetTagTest() throws ApiException {
        Integer receivingWorksheetId = null;
        String receivingWorksheetTag = null;
        api.deleteReceivingWorksheetTag(receivingWorksheetId, receivingWorksheetTag);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated a receivingWorksheet by id
     *
     * Returns a duplicated receivingWorksheet identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateReceivingWorksheetByIdTest() throws ApiException {
        Integer receivingWorksheetId = null;
        ReceivingWorksheet response = api.getDuplicateReceivingWorksheetById(receivingWorksheetId);

        // TODO: test validations
    }
    
    /**
     * Search receivingWorksheets by filter
     *
     * Returns the list of receivingWorksheets that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReceivingWorksheetByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<ReceivingWorksheet> response = api.getReceivingWorksheetByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get a receivingWorksheet by id
     *
     * Returns the receivingWorksheet identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReceivingWorksheetByIdTest() throws ApiException {
        Integer receivingWorksheetId = null;
        ReceivingWorksheet response = api.getReceivingWorksheetById(receivingWorksheetId);

        // TODO: test validations
    }
    
    /**
     * Get the files for a receivingWorksheet.
     *
     * Get all existing receivingWorksheet files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReceivingWorksheetFilesTest() throws ApiException {
        Integer receivingWorksheetId = null;
        api.getReceivingWorksheetFiles(receivingWorksheetId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for a receivingWorksheet.
     *
     * Get all existing receivingWorksheet tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReceivingWorksheetTagsTest() throws ApiException {
        Integer receivingWorksheetId = null;
        api.getReceivingWorksheetTags(receivingWorksheetId);

        // TODO: test validations
    }
    
    /**
     * Update a receivingWorksheet
     *
     * Updates an existing receivingWorksheet using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateReceivingWorksheetTest() throws ApiException {
        ReceivingWorksheet body = null;
        api.updateReceivingWorksheet(body);

        // TODO: test validations
    }
    
    /**
     * Update a receivingWorksheet custom fields
     *
     * Updates an existing receivingWorksheet custom fields using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateReceivingWorksheetCustomFieldsTest() throws ApiException {
        ReceivingWorksheet body = null;
        api.updateReceivingWorksheetCustomFields(body);

        // TODO: test validations
    }
    
}

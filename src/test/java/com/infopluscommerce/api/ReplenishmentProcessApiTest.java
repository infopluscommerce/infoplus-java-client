/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.RecordFile;
import com.infopluscommerce.model.ReplenishmentProcess;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReplenishmentProcessApi
 */
@Ignore
public class ReplenishmentProcessApiTest {

    private final ReplenishmentProcessApi api = new ReplenishmentProcessApi();

    
    /**
     * Add new audit for a replenishmentProcess
     *
     * Adds an audit to an existing replenishmentProcess.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addReplenishmentProcessAuditTest() throws ApiException {
        Integer replenishmentProcessId = null;
        String replenishmentProcessAudit = null;
        api.addReplenishmentProcessAudit(replenishmentProcessId, replenishmentProcessAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a replenishmentProcess
     *
     * Adds a file to an existing replenishmentProcess.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addReplenishmentProcessFileTest() throws ApiException {
        Integer replenishmentProcessId = null;
        String fileName = null;
        api.addReplenishmentProcessFile(replenishmentProcessId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a replenishmentProcess by URL.
     *
     * Adds a file to an existing replenishmentProcess by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addReplenishmentProcessFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer replenishmentProcessId = null;
        api.addReplenishmentProcessFileByURL(body, replenishmentProcessId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for a replenishmentProcess.
     *
     * Adds a tag to an existing replenishmentProcess.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addReplenishmentProcessTagTest() throws ApiException {
        Integer replenishmentProcessId = null;
        String replenishmentProcessTag = null;
        api.addReplenishmentProcessTag(replenishmentProcessId, replenishmentProcessTag);

        // TODO: test validations
    }
    
    /**
     * Delete a file for a replenishmentProcess.
     *
     * Deletes an existing replenishmentProcess file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteReplenishmentProcessFileTest() throws ApiException {
        Integer replenishmentProcessId = null;
        Integer fileId = null;
        api.deleteReplenishmentProcessFile(replenishmentProcessId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for a replenishmentProcess.
     *
     * Deletes an existing replenishmentProcess tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteReplenishmentProcessTagTest() throws ApiException {
        Integer replenishmentProcessId = null;
        String replenishmentProcessTag = null;
        api.deleteReplenishmentProcessTag(replenishmentProcessId, replenishmentProcessTag);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated a replenishmentProcess by id
     *
     * Returns a duplicated replenishmentProcess identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateReplenishmentProcessByIdTest() throws ApiException {
        Integer replenishmentProcessId = null;
        ReplenishmentProcess response = api.getDuplicateReplenishmentProcessById(replenishmentProcessId);

        // TODO: test validations
    }
    
    /**
     * Search replenishmentProcesses by filter
     *
     * Returns the list of replenishmentProcesses that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReplenishmentProcessByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<ReplenishmentProcess> response = api.getReplenishmentProcessByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get a replenishmentProcess by id
     *
     * Returns the replenishmentProcess identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReplenishmentProcessByIdTest() throws ApiException {
        Integer replenishmentProcessId = null;
        ReplenishmentProcess response = api.getReplenishmentProcessById(replenishmentProcessId);

        // TODO: test validations
    }
    
    /**
     * Get the files for a replenishmentProcess.
     *
     * Get all existing replenishmentProcess files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReplenishmentProcessFilesTest() throws ApiException {
        Integer replenishmentProcessId = null;
        api.getReplenishmentProcessFiles(replenishmentProcessId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for a replenishmentProcess.
     *
     * Get all existing replenishmentProcess tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReplenishmentProcessTagsTest() throws ApiException {
        Integer replenishmentProcessId = null;
        api.getReplenishmentProcessTags(replenishmentProcessId);

        // TODO: test validations
    }
    
    /**
     * Update a replenishmentProcess custom fields
     *
     * Updates an existing replenishmentProcess custom fields using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateReplenishmentProcessCustomFieldsTest() throws ApiException {
        ReplenishmentProcess body = null;
        api.updateReplenishmentProcessCustomFields(body);

        // TODO: test validations
    }
    
}

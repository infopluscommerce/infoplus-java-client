/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.ModelApiResponse;
import com.infopluscommerce.model.RecordFile;
import com.infopluscommerce.model.Zone;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ZoneApi
 */
@Ignore
public class ZoneApiTest {

    private final ZoneApi api = new ZoneApi();

    
    /**
     * Create a zone
     *
     * Inserts a new zone using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addZoneTest() throws ApiException {
        Zone body = null;
        Zone response = api.addZone(body);

        // TODO: test validations
    }
    
    /**
     * Add new audit for a zone
     *
     * Adds an audit to an existing zone.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addZoneAuditTest() throws ApiException {
        Integer zoneId = null;
        String zoneAudit = null;
        api.addZoneAudit(zoneId, zoneAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a zone
     *
     * Adds a file to an existing zone.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addZoneFileTest() throws ApiException {
        Integer zoneId = null;
        String fileName = null;
        api.addZoneFile(zoneId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a zone by URL.
     *
     * Adds a file to an existing zone by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addZoneFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer zoneId = null;
        api.addZoneFileByURL(body, zoneId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for a zone.
     *
     * Adds a tag to an existing zone.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addZoneTagTest() throws ApiException {
        Integer zoneId = null;
        String zoneTag = null;
        api.addZoneTag(zoneId, zoneTag);

        // TODO: test validations
    }
    
    /**
     * Delete a zone
     *
     * Deletes the zone identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteZoneTest() throws ApiException {
        Integer zoneId = null;
        api.deleteZone(zoneId);

        // TODO: test validations
    }
    
    /**
     * Delete a file for a zone.
     *
     * Deletes an existing zone file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteZoneFileTest() throws ApiException {
        Integer zoneId = null;
        Integer fileId = null;
        api.deleteZoneFile(zoneId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for a zone.
     *
     * Deletes an existing zone tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteZoneTagTest() throws ApiException {
        Integer zoneId = null;
        String zoneTag = null;
        api.deleteZoneTag(zoneId, zoneTag);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated a zone by id
     *
     * Returns a duplicated zone identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateZoneByIdTest() throws ApiException {
        Integer zoneId = null;
        Zone response = api.getDuplicateZoneById(zoneId);

        // TODO: test validations
    }
    
    /**
     * Search zones by filter
     *
     * Returns the list of zones that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getZoneByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<Zone> response = api.getZoneByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get a zone by id
     *
     * Returns the zone identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getZoneByIdTest() throws ApiException {
        Integer zoneId = null;
        Zone response = api.getZoneById(zoneId);

        // TODO: test validations
    }
    
    /**
     * Get the files for a zone.
     *
     * Get all existing zone files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getZoneFilesTest() throws ApiException {
        Integer zoneId = null;
        api.getZoneFiles(zoneId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for a zone.
     *
     * Get all existing zone tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getZoneTagsTest() throws ApiException {
        Integer zoneId = null;
        api.getZoneTags(zoneId);

        // TODO: test validations
    }
    
    /**
     * Update a zone
     *
     * Updates an existing zone using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateZoneTest() throws ApiException {
        Zone body = null;
        api.updateZone(body);

        // TODO: test validations
    }
    
    /**
     * Update a zone custom fields
     *
     * Updates an existing zone custom fields using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateZoneCustomFieldsTest() throws ApiException {
        Zone body = null;
        api.updateZoneCustomFields(body);

        // TODO: test validations
    }
    
}

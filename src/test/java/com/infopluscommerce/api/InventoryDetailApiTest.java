/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.InventoryDetail;
import com.infopluscommerce.model.RecordFile;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InventoryDetailApi
 */
@Ignore
public class InventoryDetailApiTest {

    private final InventoryDetailApi api = new InventoryDetailApi();

    
    /**
     * Add new audit for an inventoryDetail
     *
     * Adds an audit to an existing inventoryDetail.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addInventoryDetailAuditTest() throws ApiException {
        Integer inventoryDetailId = null;
        String inventoryDetailAudit = null;
        api.addInventoryDetailAudit(inventoryDetailId, inventoryDetailAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to an inventoryDetail
     *
     * Adds a file to an existing inventoryDetail.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addInventoryDetailFileTest() throws ApiException {
        Integer inventoryDetailId = null;
        String fileName = null;
        api.addInventoryDetailFile(inventoryDetailId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to an inventoryDetail by URL.
     *
     * Adds a file to an existing inventoryDetail by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addInventoryDetailFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer inventoryDetailId = null;
        api.addInventoryDetailFileByURL(body, inventoryDetailId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for an inventoryDetail.
     *
     * Adds a tag to an existing inventoryDetail.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addInventoryDetailTagTest() throws ApiException {
        Integer inventoryDetailId = null;
        String inventoryDetailTag = null;
        api.addInventoryDetailTag(inventoryDetailId, inventoryDetailTag);

        // TODO: test validations
    }
    
    /**
     * Delete a file for an inventoryDetail.
     *
     * Deletes an existing inventoryDetail file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteInventoryDetailFileTest() throws ApiException {
        Integer inventoryDetailId = null;
        Integer fileId = null;
        api.deleteInventoryDetailFile(inventoryDetailId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for an inventoryDetail.
     *
     * Deletes an existing inventoryDetail tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteInventoryDetailTagTest() throws ApiException {
        Integer inventoryDetailId = null;
        String inventoryDetailTag = null;
        api.deleteInventoryDetailTag(inventoryDetailId, inventoryDetailTag);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated an inventoryDetail by id
     *
     * Returns a duplicated inventoryDetail identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateInventoryDetailByIdTest() throws ApiException {
        Integer inventoryDetailId = null;
        InventoryDetail response = api.getDuplicateInventoryDetailById(inventoryDetailId);

        // TODO: test validations
    }
    
    /**
     * Search inventoryDetails by filter
     *
     * Returns the list of inventoryDetails that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInventoryDetailByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<InventoryDetail> response = api.getInventoryDetailByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get an inventoryDetail by id
     *
     * Returns the inventoryDetail identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInventoryDetailByIdTest() throws ApiException {
        Integer inventoryDetailId = null;
        InventoryDetail response = api.getInventoryDetailById(inventoryDetailId);

        // TODO: test validations
    }
    
    /**
     * Get the files for an inventoryDetail.
     *
     * Get all existing inventoryDetail files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInventoryDetailFilesTest() throws ApiException {
        Integer inventoryDetailId = null;
        api.getInventoryDetailFiles(inventoryDetailId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for an inventoryDetail.
     *
     * Get all existing inventoryDetail tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInventoryDetailTagsTest() throws ApiException {
        Integer inventoryDetailId = null;
        api.getInventoryDetailTags(inventoryDetailId);

        // TODO: test validations
    }
    
    /**
     * Update an inventoryDetail custom fields
     *
     * Updates an existing inventoryDetail custom fields using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateInventoryDetailCustomFieldsTest() throws ApiException {
        InventoryDetail body = null;
        api.updateInventoryDetailCustomFields(body);

        // TODO: test validations
    }
    
}

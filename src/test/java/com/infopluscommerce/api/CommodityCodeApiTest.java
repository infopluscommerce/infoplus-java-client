/*
 * Infoplus API
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infopluscommerce.api;

import com.infopluscommerce.ApiException;
import com.infopluscommerce.model.CommodityCode;
import com.infopluscommerce.model.RecordFile;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CommodityCodeApi
 */
@Ignore
public class CommodityCodeApiTest {

    private final CommodityCodeApi api = new CommodityCodeApi();

    
    /**
     * Add new audit for a commodityCode
     *
     * Adds an audit to an existing commodityCode.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCommodityCodeAuditTest() throws ApiException {
        Integer commodityCodeId = null;
        String commodityCodeAudit = null;
        api.addCommodityCodeAudit(commodityCodeId, commodityCodeAudit);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a commodityCode
     *
     * Adds a file to an existing commodityCode.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCommodityCodeFileTest() throws ApiException {
        Integer commodityCodeId = null;
        String fileName = null;
        api.addCommodityCodeFile(commodityCodeId, fileName);

        // TODO: test validations
    }
    
    /**
     * Attach a file to a commodityCode by URL.
     *
     * Adds a file to an existing commodityCode by URL.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCommodityCodeFileByURLTest() throws ApiException {
        RecordFile body = null;
        Integer commodityCodeId = null;
        api.addCommodityCodeFileByURL(body, commodityCodeId);

        // TODO: test validations
    }
    
    /**
     * Add new tags for a commodityCode.
     *
     * Adds a tag to an existing commodityCode.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCommodityCodeTagTest() throws ApiException {
        Integer commodityCodeId = null;
        String commodityCodeTag = null;
        api.addCommodityCodeTag(commodityCodeId, commodityCodeTag);

        // TODO: test validations
    }
    
    /**
     * Delete a file for a commodityCode.
     *
     * Deletes an existing commodityCode file using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCommodityCodeFileTest() throws ApiException {
        Integer commodityCodeId = null;
        Integer fileId = null;
        api.deleteCommodityCodeFile(commodityCodeId, fileId);

        // TODO: test validations
    }
    
    /**
     * Delete a tag for a commodityCode.
     *
     * Deletes an existing commodityCode tag using the specified data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCommodityCodeTagTest() throws ApiException {
        Integer commodityCodeId = null;
        String commodityCodeTag = null;
        api.deleteCommodityCodeTag(commodityCodeId, commodityCodeTag);

        // TODO: test validations
    }
    
    /**
     * Search commodityCodes by filter
     *
     * Returns the list of commodityCodes that match the given filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCommodityCodeByFilterTest() throws ApiException {
        String filter = null;
        Integer page = null;
        Integer limit = null;
        String sort = null;
        List<CommodityCode> response = api.getCommodityCodeByFilter(filter, page, limit, sort);

        // TODO: test validations
    }
    
    /**
     * Get a commodityCode by id
     *
     * Returns the commodityCode identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCommodityCodeByIdTest() throws ApiException {
        Integer commodityCodeId = null;
        CommodityCode response = api.getCommodityCodeById(commodityCodeId);

        // TODO: test validations
    }
    
    /**
     * Get the files for a commodityCode.
     *
     * Get all existing commodityCode files.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCommodityCodeFilesTest() throws ApiException {
        Integer commodityCodeId = null;
        api.getCommodityCodeFiles(commodityCodeId);

        // TODO: test validations
    }
    
    /**
     * Get the tags for a commodityCode.
     *
     * Get all existing commodityCode tags.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCommodityCodeTagsTest() throws ApiException {
        Integer commodityCodeId = null;
        api.getCommodityCodeTags(commodityCodeId);

        // TODO: test validations
    }
    
    /**
     * Get a duplicated a commodityCode by id
     *
     * Returns a duplicated commodityCode identified by the specified id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDuplicateCommodityCodeByIdTest() throws ApiException {
        Integer commodityCodeId = null;
        CommodityCode response = api.getDuplicateCommodityCodeById(commodityCodeId);

        // TODO: test validations
    }
    
}
